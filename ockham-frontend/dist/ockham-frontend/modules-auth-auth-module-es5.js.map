{"version":3,"sources":["src/app/modules/auth/auth.component.html","src/app/modules/auth/forgot-password/forgot-password.component.html","src/app/modules/auth/login/login.component.html","src/app/modules/auth/reset-password/reset-password.component.html","src/app/modules/auth/auth-routing.module.ts","src/app/modules/auth/auth.component.scss","src/app/modules/auth/auth.component.ts","src/app/modules/auth/auth.module.ts","src/app/modules/auth/forgot-password/forgot-password.component.scss","src/app/modules/auth/forgot-password/forgot-password.component.ts","src/app/modules/auth/login/login.component.scss","src/app/modules/auth/login/login.component.ts","src/app/modules/auth/reset-password/reset-password.component.scss","src/app/modules/auth/reset-password/reset-password.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"custom-padding\\\" fxFlexFill>\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","export default \"<div class=\\\"container-login\\\" fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\" center\\\">\\n  <div class=\\\"auth-wrapper\\\">\\n    <app-arrow-back routerLink=\\\"/auth/login\\\"></app-arrow-back>\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <h3 class=\\\"text-center\\\">Forgot password</h3>\\n      <br>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email address</label>\\n        <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter email\\\">\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Request password reset</button>\\n    </form>\\n  </div>\\n</div>\"","export default \"<div class=\\\"container-login\\\" fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\" center\\\">\\n  <div class=\\\"auth-wrapper\\\">\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <h3 class=\\\"text-center\\\">Account Login</h3>\\n      <br>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n        <input type=\\\"email\\\" formControlName='email' class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\"\\n          placeholder=\\\"Enter email\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputPassword1\\\">Password</label>\\n        <input type=\\\"password\\\" formControlName='password' class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\">\\n      </div>\\n      <a routerLink=\\\"/auth/forgot-password\\\"><i>Forgot password</i></a>\\n      <br>\\n      <br>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container-login\\\" fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\" center\\\">\\n  <div class=\\\"auth-wrapper\\\">\\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <h3 class=\\\"text-center\\\">Reset password</h3>\\n      <br>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"new-password\\\">New password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"new_password\\\" class=\\\"form-control\\\" id=\\\"new-password\\\" placeholder=\\\"New password\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted && (f.new_password.errors || passwordForm.errors?.notSame) }\\\">\\n        <div *ngIf=\\\"submitted && (f.new_password.errors || passwordForm.errors?.notSame)\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.new_password.errors?.required; else newPasswordSame\\\">New password is required</div>\\n          <ng-template #newPasswordSame>\\n            <div *ngIf=\\\"passwordForm.errors?.notSame\\\">Passwords don't match</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"repeat-password\\\">Repeat password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"repeat_new_password\\\" class=\\\"form-control\\\" id=\\\"repeat-password\\\" placeholder=\\\"Repeat password\\\"\\n          [ngClass]=\\\"{ 'is-invalid': submitted &&  (f.repeat_new_password.errors || passwordForm.errors?.notSame) }\\\">\\n        <div *ngIf=\\\"submitted && (f.repeat_new_password.errors || passwordForm.errors?.notSame)\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.repeat_new_password.errors?.required; else repeatPasswordSame\\\">Repeat password is required</div>\\n          <ng-template #repeatPasswordSame>\\n            <div *ngIf=\\\"passwordForm.errors?.notSame\\\">Passwords don't match</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n      <br>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Reset password</button>\\n    </form>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'forgot-password',\n        component: ForgotPasswordComponent\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","export default \".container {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbGJhbmRpL0Rlc2t0b3AvRGVzaWduIFByb2plY3Qvb2NraGFtLWZyb250ZW5kL3NyYy9hcHAvbW9kdWxlcy9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvYXV0aC9hdXRoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDEwMCVcbn0iLCIuY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  declarations: [AuthComponent, LoginComponent, ForgotPasswordComponent, ResetPasswordComponent],\n  imports: [\n    AuthRoutingModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXV0aC9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  form = new FormGroup({\n    email: new FormControl('', Validators.required)\n  });\n\n  submitted = false;\n\n  constructor(private authService: AuthenticationService, private notifierService: NotifierService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    const email = this.form.value.email;\n    this.authService.requestPasswordReset(email)\n      .subscribe(() => {\n        this.form.reset();\n        this.notifierService.notify('default', `An email has been sent to ${email} with further instructions.`);\n      }, () => {\n        this.notifierService.notify('error', 'Your password could not be reset. Please try again later.');\n      });\n  }\n}\n","export default \".login-wrapper {\\n  width: 50%;\\n  padding-top: 40px;\\n  padding-right: 40px;\\n  padding-left: 40px;\\n  padding-bottom: 40px;\\n  border-radius: 10px;\\n  overflow: hidden;\\n  box-shadow: 0 3px 20px 0px rgba(0, 0, 0, 0.1);\\n  -moz-box-shadow: 0 3px 20px 0px rgba(0, 0, 0, 0.1);\\n  -webkit-box-shadow: 0 3px 20px 0px rgba(0, 0, 0, 0.1);\\n  -o-box-shadow: 0 3px 20px 0px rgba(0, 0, 0, 0.1);\\n  -ms-box-shadow: 0 3px 20px 0px rgba(0, 0, 0, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbGJhbmRpL0Rlc2t0b3AvRGVzaWduIFByb2plY3Qvb2NraGFtLWZyb250ZW5kL3NyYy9hcHAvbW9kdWxlcy9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsNkNBQUE7RUFDQSxrREFBQTtFQUNBLHFEQUFBO0VBQ0EsZ0RBQUE7RUFDQSxpREFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLXdyYXBwZXIge1xuICAgIHdpZHRoICAgICAgICA6IDUwJTtcbiAgICBwYWRkaW5nLXRvcCAgOiA0MHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA0MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgb3ZlcmZsb3cgICAgIDogaGlkZGVuO1xuICAgIGJveC1zaGFkb3cgICAgICAgIDogMCAzcHggMjBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIC1tb3otYm94LXNoYWRvdyAgIDogMCAzcHggMjBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAzcHggMjBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIC1vLWJveC1zaGFkb3cgICAgIDogMCAzcHggMjBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIC1tcy1ib3gtc2hhZG93ICAgIDogMCAzcHggMjBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuIiwiLmxvZ2luLXdyYXBwZXIge1xuICB3aWR0aDogNTAlO1xuICBwYWRkaW5nLXRvcDogNDBweDtcbiAgcGFkZGluZy1yaWdodDogNDBweDtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNDBweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm94LXNoYWRvdzogMCAzcHggMjBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAtbW96LWJveC1zaGFkb3c6IDAgM3B4IDIwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDNweCAyMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIC1vLWJveC1zaGFkb3c6IDAgM3B4IDIwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgLW1zLWJveC1zaGFkb3c6IDAgM3B4IDIwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  redirect: string;\n\n  constructor(\n    private authService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    //logout user\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.route.queryParamMap.subscribe(params => {\n      this.redirect = params.get('redirect');\n    });\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.authService.login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        () => {\n          if (this.redirect) {\n            this.router.navigate([this.redirect]);\n          } else {\n            this.router.navigate(['']);\n          }\n        },\n        error => {\n          console.log('Auth Error', error);\n        }\n      )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXV0aC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { samePasswords } from 'src/app/shared/validators/same-passwords.validator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  passwordForm = new FormGroup({\n    new_password: new FormControl('', Validators.required),\n    repeat_new_password: new FormControl('', Validators.required)\n  }, { validators: samePasswords });\n\n  submitted = false;\n\n  private token: string;\n\n  constructor(private authService: AuthenticationService,\n              private notifierService: NotifierService, \n              private route: ActivatedRoute, \n              private router: Router) { }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n      this.token = params.get('token');\n    });\n  }\n\n  get f() { return this.passwordForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.passwordForm.invalid) {\n      return;\n    }\n\n    const new_password = this.passwordForm.value.new_password;\n    console.log(this.token);\n    this.authService.resetPassword(this.token, new_password).pipe(first())\n      .subscribe(\n        () => {\n          this.router.navigate(['']).then(() => {\n            this.notifierService.notify('default', 'Your password has been changed successfully.');\n          });\n        },\n        error => {\n          console.log(\"ERROR\", error);\n          this.notifierService.notify('error', 'The password reset token is invalid. Please request another password reset and try again.');\n        }\n      )\n  }\n}\n"],"sourceRoot":"webpack:///","file":"modules-auth-auth-module-es5.js"}