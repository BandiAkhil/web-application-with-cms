{"version":3,"sources":["./src/app/modules/admin/members/add-member-modal/add-member-modal.component.html","./src/app/modules/admin/members/archive-member-modal/archive-member-modal.component.html","./src/app/modules/admin/members/member-form/member-form.component.html","./src/app/modules/admin/members/members.component.html","./src/app/core/services/default-batch.service.ts","./src/app/core/services/role.service.ts","./src/app/core/services/study-program.service.ts","./src/app/modules/admin/members/add-member-modal/add-member-modal.component.scss","./src/app/modules/admin/members/add-member-modal/add-member-modal.component.ts","./src/app/modules/admin/members/archive-member-modal/archive-member-modal.component.scss","./src/app/modules/admin/members/archive-member-modal/archive-member-modal.component.ts","./src/app/modules/admin/members/member-form/member-form.component.scss","./src/app/modules/admin/members/member-form/member-form.component.ts","./src/app/modules/admin/members/members-routing.module.ts","./src/app/modules/admin/members/members.component.scss","./src/app/modules/admin/members/members.component.ts","./src/app/modules/admin/members/members.module.ts"],"names":[],"mappings":"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","file":"members-members-module-es2015.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Member created</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <p>Member with ID <b>{{ id }}</b> created.</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">Close</button>\\n</div>\\n\"","export default \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Archive member</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <p>Are you sure you want to archive {{ member.first_name + ' ' + (member.insertion ? member.insertion + ' ' : '') + member.last_name }}?</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-archive\\\" (click)=\\\"onArchive()\\\">Archive</button>\\n</div>\\n\"","export default \"<div class=\\\"row\\\" *ngIf=\\\"member && member.archived_at\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"alert alert-archive\\\">\\n      This member has been archived at {{ member.archived_at }}.\\n    </div>\\n  </div>\\n</div>\\n<app-arrow-back routerLink=\\\"/admin/members\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1 *ngIf=\\\"isEditRoute()\\\">Edit Member</h1>\\n    <h1 *ngIf=\\\"isAddRoute()\\\">Add Member</h1>\\n  </div>\\n</div>\\n<form [formGroup]=\\\"memberForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"first-name\\\">First name*</label>\\n        <input id=\\\"first-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.first_name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.first_name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.first_name.errors.required\\\">First name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-2 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"insertion\\\">Insertion</label>\\n        <input id=\\\"insertion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"insertion\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-5 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"last-name\\\">Last name*</label>\\n        <input id=\\\"last-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.last_name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.last_name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.last_name.errors.required\\\">Last name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"initials\\\">Initials*</label>\\n        <input id=\\\"initials\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"initials\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.initials.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.initials.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.initials.errors.required\\\">Initials is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone-number\\\">Phone number</label>\\n        <input id=\\\"phone-number\\\" type=\\\"tel\\\" class=\\\"form-control\\\" formControlName=\\\"phone_number\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"address\\\">Address</label>\\n        <input id=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"zip-code\\\">Zip code</label>\\n        <input id=\\\"zip-code\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zip_code\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"residence\\\">Residence</label>\\n        <input id=\\\"residence\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"residence\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"country\\\">Country</label>\\n        <input id=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"country\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email*</label>\\n        <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"f.email.errors.email\\\">Invalid email</div>\\n          <div *ngIf=\\\"f.email.errors.alreadyInUse\\\">Email is already registered</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"memberable_type\\\" id=\\\"student\\\" value=\\\"student\\\" formControlName=\\\"memberable_type\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"student\\\">Student</label>\\n      </div>\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"memberable_type\\\" id=\\\"teacher\\\" value=\\\"teacher\\\" formControlName=\\\"memberable_type\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"teacher\\\">Teacher</label>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div [hidden]=\\\"memberType !== 'student'\\\" [formGroup]=\\\"studentForm\\\" class=\\\"pt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"study-program\\\">Study program*</label>\\n          <select id=\\\"study-program\\\" class=\\\"form-control\\\" formControlName=\\\"study_program_id\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.study_program_id.errors }\\\">\\n            <option *ngFor=\\\"let p of studyPrograms\\\" [value]=\\\"p.id\\\">\\n              {{ p.full_name }} ({{ p.short_name }})\\n            </option>\\n          </select>\\n          <div *ngIf=\\\"studentSubmitted && sf.study_program_id.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"sf.study_program_id.errors.required\\\">Study program is required</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"student-number\\\">Student number*</label>\\n          <input id=\\\"student-number\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"student_number\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.student_number.errors }\\\">\\n          <div *ngIf=\\\"studentSubmitted && sf.student_number.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"sf.student_number.errors.required\\\">Student number is required</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"programme\\\">Group Honours programme*</label>\\n          <div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input id=\\\"bachelor\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"track\\\" value=\\\"bachelor\\\" formControlName=\\\"track\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.track.errors }\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"bachelor\\\">BSc</label>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input id=\\\"master\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"track\\\" value=\\\"master\\\" formControlName=\\\"track\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.track.errors }\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"master\\\">MSc</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"programme\\\" type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"track_number\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.track_number.errors }\\\">\\n              <div *ngIf=\\\"studentSubmitted && sf.track_number.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"sf.track_number.errors.required\\\">Track number is required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"memberType !== 'teacher'\\\" [formGroup]=\\\"teacherForm\\\" class=\\\"pt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"department\\\">Department/Chair*</label>\\n          <input id=\\\"department\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"department\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': teacherSubmitted && tf.department.errors }\\\">\\n          <div *ngIf=\\\"teacherSubmitted && tf.department.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"tf.department.errors.required\\\">Department is required</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"employee-number\\\">Employee number*</label>\\n          <input id=\\\"employee-number\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"employee_number\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': teacherSubmitted && tf.employee_number.errors }\\\">\\n          <div *ngIf=\\\"teacherSubmitted && tf.employee_number.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"tf.employee_number.errors.required\\\">Employee number is required</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-check\\\">\\n        <input id=\\\"photos-allowed\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"photos_allowed\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"photos-allowed\\\">Allow H.V. Ockham to take pictures during activities and publish these on the website.</label>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row pt-4\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"place\\\">Place*</label>\\n        <input id=\\\"place\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"location_signup\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.location_signup.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.location_signup.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.location_signup.errors.required\\\">Place is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"date-of-membership\\\">Date of membership*</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"date-of-membership\\\" class=\\\"form-control date-picker-input\\\" matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date_of_membership\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': submitted && f.date_of_membership.errors }\\\">\\n          <div *ngIf=\\\"submitted && f.date_of_membership.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.date_of_membership.errors.required\\\">Date of membership is required</div>\\n          </div>\\n          <div class=\\\"input-group-prepend\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <div class=\\\"row\\\" *ngIf=\\\"!sepa && (bankAccountForm.value.iban || bankAccountForm.value.debtor_name || bankAccountForm.value.bic)\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"alert alert-warning\\\">\\n        <i class=\\\"material-icons text-icon\\\">\\n          warning\\n        </i>\\n        Unchecking SEPA Authorization will delete it.\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-check\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [checked]=\\\"sepa\\\" (change)=\\\"sepa = !sepa\\\">\\n        <h5>SEPA Authorization (Optional)</h5>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container sepa-container\\\" [hidden]=\\\"!sepa\\\" [formGroup]=\\\"bankAccountForm\\\">\\n    <div class=\\\"row pb-4\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-check\\\">\\n          <input id=\\\"authorization-contribution\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"authorization_contribution\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"authorization-contribution\\\">\\n            I authorize HONOURS VERENIGING OCKHAM to send recurrent collection instructions to my bank to debit my account and\\n            I authorize my bank to debit my account on a recurrent basis in accordance with the contribution collection instructions\\n            from HONOURS VERENIGING OCKHAM. As part of your rights, you are entitled to a refund from your bank under the terms\\n            and conditions of your agreement with your bank. A refund must be claimed within 8 weeks starting from the date on\\n            which your account was debited.\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row pt-4\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-check\\\">\\n          <input id=\\\"authorization-other\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"authorization_other\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"authorization-other\\\">\\n            I also want to authorize HONOURS VERENIGING OCKHAM to send recurrent collection instructions to my bank concerning\\n            debt other than contribution.\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row pt-4\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"debtor-name\\\">Debtor name*</label>\\n          <input id=\\\"debtor-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"debtor_name\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': sepaSubmitted && bf.debtor_name.errors }\\\">\\n          <div *ngIf=\\\"sepaSubmitted && bf.debtor_name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"bf.debtor_name.errors.required\\\">Debtor name is required</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8 col-sm-12\\\">\\n        <label for=\\\"iban\\\">IBAN*</label>\\n        <input id=\\\"iban\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"iban\\\"\\n               [ngClass]=\\\"{ 'is-invalid': sepaSubmitted && bf.iban.errors }\\\">\\n        <div *ngIf=\\\"sepaSubmitted && bf.iban.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"bf.iban.errors.required\\\">IBAN is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4 col-sm-12\\\">\\n        <label for=\\\"bic\\\">BIC</label>\\n        <input id=\\\"bic\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"bic\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"remark\\\">Remark</label>\\n        <textarea rows=\\\"4\\\" id=\\\"remark\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remark\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"role\\\">Role*</label>\\n        <select id=\\\"role\\\" class=\\\"form-control\\\" formControlName=\\\"role_id\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.role_id.errors }\\\">>\\n          <option *ngFor=\\\"let r of roles\\\" [value]=\\\"r.id\\\">\\n            {{ r.name | snakeCaseToText }}\\n          </option>\\n        </select>\\n        <div *ngIf=\\\"submitted && f.role_id.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.role_id.errors.required\\\">Role is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <app-flexible-column-form model=\\\"members\\\" formControlName=\\\"flexible_column_values\\\"></app-flexible-column-form>\\n  <div class=\\\"row pt-3\\\">\\n    <div class=\\\"col-auto\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n    </div>\\n    <div class=\\\"col-auto\\\" *ngIf=\\\"isAddRoute()\\\">\\n      <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"onSave(true)\\\">Save and add another member</button>\\n    </div>\\n    <div class=\\\"col-auto\\\" *ngIf=\\\"isEditRoute()\\\">\\n      <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteMember()\\\">Delete this member</button>\\n    </div>\\n    <div class=\\\"col-auto\\\" *ngIf=\\\"isEditRoute()\\\">\\n      <button class=\\\"btn btn-archive\\\" type=\\\"button\\\" (click)=\\\"archiveMember()\\\">Archive this member</button>\\n    </div>\\n    <div class=\\\"col-auto ml-auto\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/admin/members\\\">Cancel</button>\\n    </div>\\n  </div>\\n</form>\\n\"","export default \"<app-arrow-back routerLink=\\\"/admin\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Manage members</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <app-pagination-table \\n      [data]=\\\"members\\\" \\n      [headers]=\\\"headers\\\" \\n      [keys]=\\\"columns\\\" \\n      [showActionColumn]=\\\"true\\\" [showArchiveButton]=\\\"true\\\"\\n      (edit)=\\\"editMember($event)\\\" \\n      (delete)=\\\"deleteMember($event)\\\"\\n      (archive)=\\\"archiveMember($event)\\\"></app-pagination-table>\\n  </div>\\n</div>\\n\\n<div class=\\\"row pt-4\\\">\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"add\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        add\\n      </i>\\n      Add member\\n    </button>\\n  </div>\\n  <div class=\\\"col-auto ml-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"columns\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        storage\\n      </i>\\n      Manage extra columns\\n    </button>\\n  </div>\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"fileUpload.click()\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        cloud_upload\\n      </i>\\n      Import members\\n    </button>\\n  </div>\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getMembersExport()\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        cloud_download\\n      </i>\\n      Export members\\n    </button>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-none\\\">\\n  <input type=\\\"file\\\" #fileUpload accept=\\\"text/csv\\\" (change)=\\\"onMembersImport($event.target.files)\\\">\\n</div>\\n\"","import { Injectable } from '@angular/core';\nimport { differenceInYears } from 'date-fns';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultBatchService {\n\n  private baseYear = new Date(2019, 9, 1);\n  private defaultBatchNumber = 11;\n\n  constructor() {}\n\n  setValue(batch: number) {\n    this.defaultBatchNumber = batch;\n  }\n\n  getValue(): number {\n    return this.defaultBatchNumber + differenceInYears(new Date(), this.baseYear);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Role } from '../models/role';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  private baseUrl = '/api/v1/roles';\n\n  private cache$: Observable<Role[]>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get roles() {\n    if (!this.cache$) {\n      this.cache$ = this.fetchRoles().pipe(shareReplay(1));\n    }\n    return this.cache$;\n  }\n\n  private fetchRoles() {\n    return this.httpClient.get<Role[]>(this.baseUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StudyProgram } from '../models/study_program';\nimport { shareReplay } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudyProgramService {\n\n  private baseUrl = '/api/v1/study-programs';\n\n  private cache$: Observable<StudyProgram[]>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get studyPrograms() {\n    if (!this.cache$) {\n      this.cache$ = this.fetchStudyPrograms().pipe(shareReplay(1));\n    }\n    return this.cache$;\n  }\n\n  private fetchStudyPrograms() {\n    return this.httpClient.get<StudyProgram[]>(this.baseUrl);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9hZGQtbWVtYmVyLW1vZGFsL2FkZC1tZW1iZXItbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-add-member-modal',\n  templateUrl: './add-member-modal.component.html',\n  styleUrls: ['./add-member-modal.component.scss']\n})\nexport class AddMemberModalComponent implements OnInit {\n\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n  @Input() id: number;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  close() {\n    this.activeModal.close();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9hcmNoaXZlLW1lbWJlci1tb2RhbC9hcmNoaXZlLW1lbWJlci1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Member } from 'src/app/core/models/member';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-archive-member-modal',\n  templateUrl: './archive-member-modal.component.html',\n  styleUrls: ['./archive-member-modal.component.scss']\n})\nexport class ArchiveMemberModalComponent implements OnInit {\n\n  @Input() member: Member;\n  @Output() archive: EventEmitter<void> = new EventEmitter();\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  onArchive() {\n    this.archive.emit();\n  }\n\n  close() {\n    this.activeModal.close();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9tZW1iZXItZm9ybS9tZW1iZXItZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MemberService } from 'src/app/core/services/member.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {NotifierService} from 'angular-notifier';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {AddMemberModalComponent} from '../add-member-modal/add-member-modal.component';\nimport { RoleService } from 'src/app/core/services/role.service';\nimport { Role } from 'src/app/core/models/role';\nimport { StudyProgram } from '../../../../core/models/study_program';\nimport { StudyProgramService } from '../../../../core/services/study-program.service';\nimport { cloneDeep } from 'lodash';\nimport {DefaultBatchService} from '../../../../core/services/default-batch.service';\nimport { Column } from 'src/app/core/models/column';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { Member } from '../../../../core/models/member';\n\n@Component({\n  selector: 'app-member-form',\n  templateUrl: './member-form.component.html',\n  styleUrls: ['./member-form.component.scss']\n})\nexport class MemberFormComponent implements OnInit {\n\n  mode: string;\n\n  member: Member;\n\n  studyPrograms: StudyProgram[] = [];\n\n  roles: Role[] = [];\n\n  extraColumns: Column[] = [];\n\n  memberForm = new FormGroup({\n    first_name: new FormControl('', Validators.required),\n    insertion: new FormControl(''),\n    last_name: new FormControl('', Validators.required),\n    initials: new FormControl('', Validators.required),\n    phone_number: new FormControl(''),\n    address: new FormControl(''),\n    zip_code: new FormControl(''),\n    residence: new FormControl(''),\n    country: new FormControl(''),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    photos_allowed: new FormControl(false, Validators.required),\n    date_of_membership: new FormControl(new Date(), Validators.required),\n    role_id: new FormControl('', Validators.required),\n    location_signup: new FormControl('', Validators.required),\n    remark: new FormControl(''),\n    memberable_type: new FormControl('student', Validators.required),\n    flexible_column_values: new FormControl([])\n  });\n\n  studentForm = new FormGroup({\n    study_program_id: new FormControl('', Validators.required),\n    student_number: new FormControl('', Validators.required),\n    track: new FormControl('bachelor', Validators.required),\n    track_number: new FormControl('', Validators.required),\n  });\n\n  teacherForm = new FormGroup({\n    department: new FormControl('', Validators.required),\n    employee_number: new FormControl('', Validators.required)\n  });\n\n  bankAccountForm = new FormGroup({\n    authorization_contribution: new FormControl(false, Validators.required),\n    authorization_other: new FormControl(false, Validators.required),\n    debtor_name: new FormControl('', Validators.required),\n    iban: new FormControl('', Validators.required),\n    bic: new FormControl('')\n  });\n\n  sepa = false;\n\n  submitted = false;\n  sepaSubmitted = false;\n  studentSubmitted = false;\n  teacherSubmitted = false;\n\n  constructor(private memberService: MemberService,\n              private roleService: RoleService,\n              private studyProgramService: StudyProgramService,\n              private columnService: ColumnService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private notifierService: NotifierService,\n              private modalService: NgbModal,\n              private defaultBatchService: DefaultBatchService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({mode}) => {\n      this.mode = mode;\n      if (this.isEditRoute()) {\n        this.route.paramMap.subscribe(params => {\n          this.memberService.getMember(params.get('id'))\n            .subscribe(member => {\n              this.member = member;\n              this.memberForm.patchValue(member);\n              this.memberForm.patchValue({\n                flexible_column_values: member.flexible_columns\n              })\n              this.memberForm.patchValue({\n                role_id: member.role.id\n              });\n              if (member.bank_account) {\n                this.sepa = true;\n                this.bankAccountForm.patchValue(member.bank_account);\n              }\n              if (member.memberable_type === 'student') {\n                this.studentForm.patchValue(member.memberable);\n                this.studentForm.patchValue({\n                  track: member.memberable.batch_bhp ? 'bachelor' : 'master',\n                  track_number: member.memberable.batch_bhp || member.memberable.batch_mhp,\n                  study_program_id: member.memberable.study_program.id\n                });\n              } else {\n                this.teacherForm.patchValue(member.memberable);\n              }\n            });\n        });\n      } else {\n        this.studentForm.patchValue( {\n          track_number: this.defaultBatchService.getValue()\n        });\n        this.columnService.getColumns('members').subscribe(columns => this.memberForm.patchValue({flexible_column_values: columns}));\n      }\n    });\n    this.roleService.roles.subscribe(roles => {\n      this.roles = roles;\n      if (!this.memberForm.value.role_id) {\n        this.memberForm.patchValue({role_id: roles.find(r => r.name === 'general_member').id})\n      }\n    });\n    this.studyProgramService.studyPrograms.subscribe(studyPrograms => this.studyPrograms = studyPrograms);\n  }\n\n  get f() { return this.memberForm.controls; }\n\n  get bf() { return this.bankAccountForm.controls; }\n\n  get sf() { return this.studentForm.controls; }\n\n  get tf() { return this.teacherForm.controls; }\n\n  get memberType() {\n    return this.memberForm.value.memberable_type\n  }\n\n  onSave(addAnother = false) {\n    this.submitted = true;\n\n    this.sepaSubmitted = this.sepa;\n    this.studentSubmitted = this.memberType === 'student';\n    this.teacherSubmitted = this.memberType === 'teacher';\n\n    if (this.memberForm.invalid ||\n       (this.sepa && this.bankAccountForm.invalid) ||\n       (this.memberType === 'student' && this.studentForm.invalid) ||\n       (this.memberType === 'teacher' && this.teacherForm.invalid)) {\n      return;\n    }\n\n    const member = cloneDeep(this.memberForm.value);\n\n    member.bank_account = this.sepa ? this.bankAccountForm.value : null;\n\n    if (member.memberable_type === 'student') {\n      const memberable = cloneDeep(this.studentForm.value);\n      if (memberable.track === 'bachelor') {\n        memberable.batch_bhp = memberable.track_number;\n      } else {\n        memberable.batch_mhp = memberable.track_number;\n      }\n\n      delete memberable.track;\n      delete memberable.track_number;\n\n      member.memberable = memberable;\n    } else if (member.memberable_type === 'teacher') {\n      member.memberable = this.teacherForm.value;\n    } else {\n      // Should never occur\n      console.error(\"Unknown type: \" + member.memberable_type);\n    }\n\n    for (const key in member) {\n      if (member.hasOwnProperty(key) && member[key] === '') {\n        member[key] = null; // Ensures that no empty values are sent to the backend, but null values\n      }\n    }\n\n    if (this.isAddRoute()) {\n      this.defaultBatchService.setValue(+this.studentForm.value.track_number);\n      this.memberService.createMember(member)\n        .subscribe(({id}) => {\n          const modalRef = this.modalService.open(AddMemberModalComponent);\n          modalRef.componentInstance.id = id;\n          modalRef.result.then(() => {\n            if (addAnother) {\n              // TODO: change?\n              window.location.reload();\n            } else {\n              this.router.navigate(['/admin/members']);\n            }\n          });\n        }, error => {\n          // TODO: better way of checking error?\n          if (error.status === 400) {\n            this.f.email.setErrors({'alreadyInUse': true});\n            this.notifierService.notify('error', 'The email address is already registered.')\n          } else {\n            this.notifierService.notify('error', 'Could not register member. Please try again later.');\n          }\n        });\n    } else {\n      this.memberService.updateMember(member, this.member.id)\n        .subscribe(() => {\n          this.router.navigate(['/admin/members']).then(() => {\n            this.notifierService.notify('default', 'The member has been updated.');\n          });\n        }, error => {\n          // TODO: better way of checking error?\n          if (error.status === 400) {\n            this.f.email.setErrors({'alreadyInUse': true});\n            this.notifierService.notify('error', 'The email address is already registered.')\n          } else {\n            this.notifierService.notify('error', 'Could not update member. Please try again later.');\n          }\n        });\n    }\n  }\n\n  deleteMember() {\n    this.memberService.deleteMember(this.member.id)\n      .subscribe(() => {\n        this.router.navigate(['/admin/members']).then(() => {\n          this.notifierService.notify('default', 'The member has been deleted.');\n        });\n      });\n  }\n\n  archiveMember() {\n    this.memberService.archiveMember(this.member.id)\n      .subscribe(() => {\n        this.router.navigate(['/admin/members']).then(() => {\n          this.notifierService.notify('default', 'The member has been deleted.');\n        });\n      });\n  }\n\n  isAddRoute() {\n    return this.mode === 'add';\n  }\n\n  isEditRoute() {\n    return this.mode === 'edit';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MembersComponent } from './members.component';\nimport {MemberFormComponent} from './member-form/member-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MembersComponent\n  },\n  {\n    path: 'add',\n    component: MemberFormComponent,\n    data: {\n      mode: 'add'\n    }\n  },\n  {\n    path: ':id/edit',\n    component: MemberFormComponent,\n    data: {\n      mode: 'edit'\n    }\n  },\n  {\n    path: 'columns',\n    loadChildren: () => import('../columns/columns.module').then(m => m.ColumnsModule),\n    data: {\n      model: 'members'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MembersRoutingModule { }\n","export default \"table {\\n  width: 100%;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbGJhbmRpL0Rlc2t0b3AvRGVzaWduIFByb2plY3Qvb2NraGFtLWZyb250ZW5kL3NyYy9hcHAvbW9kdWxlcy9hZG1pbi9tZW1iZXJzL21lbWJlcnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9tZW1iZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FkbWluL21lbWJlcnMvbWVtYmVycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXg6IGF1dG87XG59XG4iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdy14OiBhdXRvO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Member} from '../../../core/models/member';\nimport {MemberService} from '../../../core/services/member.service';\nimport {NotifierService} from 'angular-notifier';\nimport {Router} from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DeleteModalComponent } from 'src/app/shared/components/delete-modal/delete-modal.component';\nimport { ArchiveMemberModalComponent } from './archive-member-modal/archive-member-modal.component';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.scss']\n})\nexport class MembersComponent implements OnInit {\n\n  members: Member[] = [];\n\n  columnNames = [\n    {key: 'id', name: 'ID'}, {key: 'first_name', name: 'First name'}, {key: 'insertion', name: 'Insertion'},\n    {key: 'last_name', name: 'Last name'}, {key: 'initials', name: 'Initials'}, {key: 'email', name: 'Email'},\n    {key: 'role.name', name: 'Role'}\n  ];\n\n  get columns() {\n    return this.columnNames.map(c => c.key);\n  }\n\n  get headers() {\n    return this.columnNames.map(c => c.name);\n  }\n\n  constructor(private memberService: MemberService,\n              private notifierService: NotifierService,\n              private router: Router,\n              private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getMembers();\n  }\n\n  getMembers() {\n    this.memberService.getMembers()\n      .subscribe(members => {\n        this.members = members;\n      });\n  }\n\n  getMembersExport() {\n    this.memberService.getMembersExport()\n      .subscribe(response => {\n        const blob = new Blob([response.body], { type: 'text/csv' });\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = this.getFileName(response);\n        link.click();\n      });\n  }\n\n  onMembersImport(files: FileList) {\n    const file = files.item(0);\n    this.memberService.importMembers(file)\n      .subscribe(() => {\n        this.notifierService.notify('default', 'The members have been successfully imported.');\n        this.getMembers();\n      }, error => {\n        this.notifierService.notify('error', `An error occurred: ${error.error.message}`);\n      });\n  }\n\n  private getFileName(httpResponse) {\n    const contentDispositionHeader = httpResponse.headers.get('Content-Disposition');\n    const result = contentDispositionHeader.split(';')[1].trim().split('=')[1];\n    return result.replace(/\"/g, '');\n  }\n\n  editMember(row) {\n    this.router.navigate([`/admin/members/${row.id}/edit`]);\n  }\n\n  deleteMember(row) {\n    const modalRef = this.openDeleteModal();\n    modalRef.componentInstance.objRef = 'this member';\n\n    modalRef.componentInstance.delete.subscribe(() => {\n      this.memberService.deleteMember(row.id).subscribe(() => {\n        this.notifierService.notify('default', 'Member successfully deleted.');\n        this.getMembers();\n      });\n    });\n  }\n\n  archiveMember(row) {\n    const modalRef = this.openArchiveModal();\n    modalRef.componentInstance.member = row;\n\n    modalRef.componentInstance.archive.subscribe(() => {\n      this.memberService.archiveMember(row.id).subscribe(() => {\n        modalRef.close();\n        this.notifierService.notify('default', 'Member successfully archived.');\n        this.getMembers();\n      });\n    });\n  }\n\n  private openDeleteModal() {\n    return this.modalService.open(DeleteModalComponent);\n  }\n\n  private openArchiveModal() {\n    return this.modalService.open(ArchiveMemberModalComponent);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\n\nimport { MembersRoutingModule } from './members-routing.module';\nimport { MembersComponent } from './members.component';\nimport { MemberFormComponent } from './member-form/member-form.component';\nimport { AddMemberModalComponent } from './add-member-modal/add-member-modal.component';\nimport { ArchiveMemberModalComponent } from './archive-member-modal/archive-member-modal.component';\n\n@NgModule({\n  declarations: [MembersComponent, MemberFormComponent, AddMemberModalComponent, ArchiveMemberModalComponent],\n  imports: [\n    MembersRoutingModule,\n    SharedModule\n  ],\n  entryComponents: [\n    AddMemberModalComponent,\n    ArchiveMemberModalComponent\n  ]\n})\nexport class MembersModule { }\n"],"sourceRoot":"webpack:///"}