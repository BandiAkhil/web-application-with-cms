{"version":3,"sources":["src/app/modules/admin/members/add-member-modal/add-member-modal.component.html","src/app/modules/admin/members/archive-member-modal/archive-member-modal.component.html","src/app/modules/admin/members/member-form/member-form.component.html","src/app/modules/admin/members/members.component.html","src/app/core/services/default-batch.service.ts","src/app/core/services/role.service.ts","src/app/core/services/study-program.service.ts","src/app/modules/admin/members/add-member-modal/add-member-modal.component.scss","src/app/modules/admin/members/add-member-modal/add-member-modal.component.ts","src/app/modules/admin/members/archive-member-modal/archive-member-modal.component.scss","src/app/modules/admin/members/archive-member-modal/archive-member-modal.component.ts","src/app/modules/admin/members/member-form/member-form.component.scss","src/app/modules/admin/members/member-form/member-form.component.ts","src/app/modules/admin/members/members-routing.module.ts","src/app/modules/admin/members/members.component.scss","src/app/modules/admin/members/members.component.ts","src/app/modules/admin/members/members.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Member created</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <p>Member with ID <b>{{ id }}</b> created.</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">Close</button>\\n</div>\\n\"","export default \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Archive member</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <p>Are you sure you want to archive {{ member.first_name + ' ' + (member.insertion ? member.insertion + ' ' : '') + member.last_name }}?</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-archive\\\" (click)=\\\"onArchive()\\\">Archive</button>\\n</div>\\n\"","export default \"<div class=\\\"row\\\" *ngIf=\\\"member && member.archived_at\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"alert alert-archive\\\">\\n      This member has been archived at {{ member.archived_at }}.\\n    </div>\\n  </div>\\n</div>\\n<app-arrow-back routerLink=\\\"/admin/members\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1 *ngIf=\\\"isEditRoute()\\\">Edit Member</h1>\\n    <h1 *ngIf=\\\"isAddRoute()\\\">Add Member</h1>\\n  </div>\\n</div>\\n<form [formGroup]=\\\"memberForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"first-name\\\">First name*</label>\\n        <input id=\\\"first-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.first_name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.first_name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.first_name.errors.required\\\">First name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-2 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"insertion\\\">Insertion</label>\\n        <input id=\\\"insertion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"insertion\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-5 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"last-name\\\">Last name*</label>\\n        <input id=\\\"last-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.last_name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.last_name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.last_name.errors.required\\\">Last name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"initials\\\">Initials*</label>\\n        <input id=\\\"initials\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"initials\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.initials.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.initials.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.initials.errors.required\\\">Initials is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone-number\\\">Phone number</label>\\n        <input id=\\\"phone-number\\\" type=\\\"tel\\\" class=\\\"form-control\\\" formControlName=\\\"phone_number\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"address\\\">Address</label>\\n        <input id=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"zip-code\\\">Zip code</label>\\n        <input id=\\\"zip-code\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zip_code\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"residence\\\">Residence</label>\\n        <input id=\\\"residence\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"residence\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"country\\\">Country</label>\\n        <input id=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"country\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email*</label>\\n        <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"f.email.errors.email\\\">Invalid email</div>\\n          <div *ngIf=\\\"f.email.errors.alreadyInUse\\\">Email is already registered</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"memberable_type\\\" id=\\\"student\\\" value=\\\"student\\\" formControlName=\\\"memberable_type\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"student\\\">Student</label>\\n      </div>\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"memberable_type\\\" id=\\\"teacher\\\" value=\\\"teacher\\\" formControlName=\\\"memberable_type\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"teacher\\\">Teacher</label>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div [hidden]=\\\"memberType !== 'student'\\\" [formGroup]=\\\"studentForm\\\" class=\\\"pt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"study-program\\\">Study program*</label>\\n          <select id=\\\"study-program\\\" class=\\\"form-control\\\" formControlName=\\\"study_program_id\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.study_program_id.errors }\\\">\\n            <option *ngFor=\\\"let p of studyPrograms\\\" [value]=\\\"p.id\\\">\\n              {{ p.full_name }} ({{ p.short_name }})\\n            </option>\\n          </select>\\n          <div *ngIf=\\\"studentSubmitted && sf.study_program_id.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"sf.study_program_id.errors.required\\\">Study program is required</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"student-number\\\">Student number*</label>\\n          <input id=\\\"student-number\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"student_number\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.student_number.errors }\\\">\\n          <div *ngIf=\\\"studentSubmitted && sf.student_number.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"sf.student_number.errors.required\\\">Student number is required</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"programme\\\">Group Honours programme*</label>\\n          <div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input id=\\\"bachelor\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"track\\\" value=\\\"bachelor\\\" formControlName=\\\"track\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.track.errors }\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"bachelor\\\">BSc</label>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input id=\\\"master\\\" class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"track\\\" value=\\\"master\\\" formControlName=\\\"track\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.track.errors }\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"master\\\">MSc</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <input id=\\\"programme\\\" type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"track_number\\\"\\n                     [ngClass]=\\\"{ 'is-invalid': studentSubmitted && sf.track_number.errors }\\\">\\n              <div *ngIf=\\\"studentSubmitted && sf.track_number.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"sf.track_number.errors.required\\\">Track number is required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"memberType !== 'teacher'\\\" [formGroup]=\\\"teacherForm\\\" class=\\\"pt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"department\\\">Department/Chair*</label>\\n          <input id=\\\"department\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"department\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': teacherSubmitted && tf.department.errors }\\\">\\n          <div *ngIf=\\\"teacherSubmitted && tf.department.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"tf.department.errors.required\\\">Department is required</div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"employee-number\\\">Employee number*</label>\\n          <input id=\\\"employee-number\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"employee_number\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': teacherSubmitted && tf.employee_number.errors }\\\">\\n          <div *ngIf=\\\"teacherSubmitted && tf.employee_number.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"tf.employee_number.errors.required\\\">Employee number is required</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-check\\\">\\n        <input id=\\\"photos-allowed\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"photos_allowed\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"photos-allowed\\\">Allow H.V. Ockham to take pictures during activities and publish these on the website.</label>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row pt-4\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"place\\\">Place*</label>\\n        <input id=\\\"place\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"location_signup\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.location_signup.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.location_signup.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.location_signup.errors.required\\\">Place is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"date-of-membership\\\">Date of membership*</label>\\n        <div class=\\\"input-group\\\">\\n          <input id=\\\"date-of-membership\\\" class=\\\"form-control date-picker-input\\\" matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date_of_membership\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': submitted && f.date_of_membership.errors }\\\">\\n          <div *ngIf=\\\"submitted && f.date_of_membership.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.date_of_membership.errors.required\\\">Date of membership is required</div>\\n          </div>\\n          <div class=\\\"input-group-prepend\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <div class=\\\"row\\\" *ngIf=\\\"!sepa && (bankAccountForm.value.iban || bankAccountForm.value.debtor_name || bankAccountForm.value.bic)\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"alert alert-warning\\\">\\n        <i class=\\\"material-icons text-icon\\\">\\n          warning\\n        </i>\\n        Unchecking SEPA Authorization will delete it.\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-check\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [checked]=\\\"sepa\\\" (change)=\\\"sepa = !sepa\\\">\\n        <h5>SEPA Authorization (Optional)</h5>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container sepa-container\\\" [hidden]=\\\"!sepa\\\" [formGroup]=\\\"bankAccountForm\\\">\\n    <div class=\\\"row pb-4\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-check\\\">\\n          <input id=\\\"authorization-contribution\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"authorization_contribution\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"authorization-contribution\\\">\\n            I authorize HONOURS VERENIGING OCKHAM to send recurrent collection instructions to my bank to debit my account and\\n            I authorize my bank to debit my account on a recurrent basis in accordance with the contribution collection instructions\\n            from HONOURS VERENIGING OCKHAM. As part of your rights, you are entitled to a refund from your bank under the terms\\n            and conditions of your agreement with your bank. A refund must be claimed within 8 weeks starting from the date on\\n            which your account was debited.\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row pt-4\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-check\\\">\\n          <input id=\\\"authorization-other\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"authorization_other\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"authorization-other\\\">\\n            I also want to authorize HONOURS VERENIGING OCKHAM to send recurrent collection instructions to my bank concerning\\n            debt other than contribution.\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row pt-4\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"debtor-name\\\">Debtor name*</label>\\n          <input id=\\\"debtor-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"debtor_name\\\"\\n                 [ngClass]=\\\"{ 'is-invalid': sepaSubmitted && bf.debtor_name.errors }\\\">\\n          <div *ngIf=\\\"sepaSubmitted && bf.debtor_name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"bf.debtor_name.errors.required\\\">Debtor name is required</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8 col-sm-12\\\">\\n        <label for=\\\"iban\\\">IBAN*</label>\\n        <input id=\\\"iban\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"iban\\\"\\n               [ngClass]=\\\"{ 'is-invalid': sepaSubmitted && bf.iban.errors }\\\">\\n        <div *ngIf=\\\"sepaSubmitted && bf.iban.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"bf.iban.errors.required\\\">IBAN is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4 col-sm-12\\\">\\n        <label for=\\\"bic\\\">BIC</label>\\n        <input id=\\\"bic\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"bic\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"remark\\\">Remark</label>\\n        <textarea rows=\\\"4\\\" id=\\\"remark\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remark\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"role\\\">Role*</label>\\n        <select id=\\\"role\\\" class=\\\"form-control\\\" formControlName=\\\"role_id\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.role_id.errors }\\\">>\\n          <option *ngFor=\\\"let r of roles\\\" [value]=\\\"r.id\\\">\\n            {{ r.name | snakeCaseToText }}\\n          </option>\\n        </select>\\n        <div *ngIf=\\\"submitted && f.role_id.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.role_id.errors.required\\\">Role is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <hr/>\\n  <app-flexible-column-form model=\\\"members\\\" formControlName=\\\"flexible_column_values\\\"></app-flexible-column-form>\\n  <div class=\\\"row pt-3\\\">\\n    <div class=\\\"col-auto\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n    </div>\\n    <div class=\\\"col-auto\\\" *ngIf=\\\"isAddRoute()\\\">\\n      <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"onSave(true)\\\">Save and add another member</button>\\n    </div>\\n    <div class=\\\"col-auto\\\" *ngIf=\\\"isEditRoute()\\\">\\n      <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteMember()\\\">Delete this member</button>\\n    </div>\\n    <div class=\\\"col-auto\\\" *ngIf=\\\"isEditRoute()\\\">\\n      <button class=\\\"btn btn-archive\\\" type=\\\"button\\\" (click)=\\\"archiveMember()\\\">Archive this member</button>\\n    </div>\\n    <div class=\\\"col-auto ml-auto\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" routerLink=\\\"/admin/members\\\">Cancel</button>\\n    </div>\\n  </div>\\n</form>\\n\"","export default \"<app-arrow-back routerLink=\\\"/admin\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Manage members</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <app-pagination-table \\n      [data]=\\\"members\\\" \\n      [headers]=\\\"headers\\\" \\n      [keys]=\\\"columns\\\" \\n      [showActionColumn]=\\\"true\\\" [showArchiveButton]=\\\"true\\\"\\n      (edit)=\\\"editMember($event)\\\" \\n      (delete)=\\\"deleteMember($event)\\\"\\n      (archive)=\\\"archiveMember($event)\\\"></app-pagination-table>\\n  </div>\\n</div>\\n\\n<div class=\\\"row pt-4\\\">\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"add\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        add\\n      </i>\\n      Add member\\n    </button>\\n  </div>\\n  <div class=\\\"col-auto ml-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"columns\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        storage\\n      </i>\\n      Manage extra columns\\n    </button>\\n  </div>\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"fileUpload.click()\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        cloud_upload\\n      </i>\\n      Import members\\n    </button>\\n  </div>\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getMembersExport()\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        cloud_download\\n      </i>\\n      Export members\\n    </button>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-none\\\">\\n  <input type=\\\"file\\\" #fileUpload accept=\\\"text/csv\\\" (change)=\\\"onMembersImport($event.target.files)\\\">\\n</div>\\n\"","import { Injectable } from '@angular/core';\nimport { differenceInYears } from 'date-fns';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultBatchService {\n\n  private baseYear = new Date(2019, 9, 1);\n  private defaultBatchNumber = 11;\n\n  constructor() {}\n\n  setValue(batch: number) {\n    this.defaultBatchNumber = batch;\n  }\n\n  getValue(): number {\n    return this.defaultBatchNumber + differenceInYears(new Date(), this.baseYear);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Role } from '../models/role';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  private baseUrl = '/api/v1/roles';\n\n  private cache$: Observable<Role[]>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get roles() {\n    if (!this.cache$) {\n      this.cache$ = this.fetchRoles().pipe(shareReplay(1));\n    }\n    return this.cache$;\n  }\n\n  private fetchRoles() {\n    return this.httpClient.get<Role[]>(this.baseUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StudyProgram } from '../models/study_program';\nimport { shareReplay } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudyProgramService {\n\n  private baseUrl = '/api/v1/study-programs';\n\n  private cache$: Observable<StudyProgram[]>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get studyPrograms() {\n    if (!this.cache$) {\n      this.cache$ = this.fetchStudyPrograms().pipe(shareReplay(1));\n    }\n    return this.cache$;\n  }\n\n  private fetchStudyPrograms() {\n    return this.httpClient.get<StudyProgram[]>(this.baseUrl);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9hZGQtbWVtYmVyLW1vZGFsL2FkZC1tZW1iZXItbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-add-member-modal',\n  templateUrl: './add-member-modal.component.html',\n  styleUrls: ['./add-member-modal.component.scss']\n})\nexport class AddMemberModalComponent implements OnInit {\n\n  @Output() delete: EventEmitter<any> = new EventEmitter();\n  @Input() id: number;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  close() {\n    this.activeModal.close();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9hcmNoaXZlLW1lbWJlci1tb2RhbC9hcmNoaXZlLW1lbWJlci1tb2RhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Member } from 'src/app/core/models/member';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-archive-member-modal',\n  templateUrl: './archive-member-modal.component.html',\n  styleUrls: ['./archive-member-modal.component.scss']\n})\nexport class ArchiveMemberModalComponent implements OnInit {\n\n  @Input() member: Member;\n  @Output() archive: EventEmitter<void> = new EventEmitter();\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  onArchive() {\n    this.archive.emit();\n  }\n\n  close() {\n    this.activeModal.close();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9tZW1iZXItZm9ybS9tZW1iZXItZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MemberService } from 'src/app/core/services/member.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {NotifierService} from 'angular-notifier';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {AddMemberModalComponent} from '../add-member-modal/add-member-modal.component';\nimport { RoleService } from 'src/app/core/services/role.service';\nimport { Role } from 'src/app/core/models/role';\nimport { StudyProgram } from '../../../../core/models/study_program';\nimport { StudyProgramService } from '../../../../core/services/study-program.service';\nimport { cloneDeep } from 'lodash';\nimport {DefaultBatchService} from '../../../../core/services/default-batch.service';\nimport { Column } from 'src/app/core/models/column';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { Member } from '../../../../core/models/member';\n\n@Component({\n  selector: 'app-member-form',\n  templateUrl: './member-form.component.html',\n  styleUrls: ['./member-form.component.scss']\n})\nexport class MemberFormComponent implements OnInit {\n\n  mode: string;\n\n  member: Member;\n\n  studyPrograms: StudyProgram[] = [];\n\n  roles: Role[] = [];\n\n  extraColumns: Column[] = [];\n\n  memberForm = new FormGroup({\n    first_name: new FormControl('', Validators.required),\n    insertion: new FormControl(''),\n    last_name: new FormControl('', Validators.required),\n    initials: new FormControl('', Validators.required),\n    phone_number: new FormControl(''),\n    address: new FormControl(''),\n    zip_code: new FormControl(''),\n    residence: new FormControl(''),\n    country: new FormControl(''),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    photos_allowed: new FormControl(false, Validators.required),\n    date_of_membership: new FormControl(new Date(), Validators.required),\n    role_id: new FormControl('', Validators.required),\n    location_signup: new FormControl('', Validators.required),\n    remark: new FormControl(''),\n    memberable_type: new FormControl('student', Validators.required),\n    flexible_column_values: new FormControl([])\n  });\n\n  studentForm = new FormGroup({\n    study_program_id: new FormControl('', Validators.required),\n    student_number: new FormControl('', Validators.required),\n    track: new FormControl('bachelor', Validators.required),\n    track_number: new FormControl('', Validators.required),\n  });\n\n  teacherForm = new FormGroup({\n    department: new FormControl('', Validators.required),\n    employee_number: new FormControl('', Validators.required)\n  });\n\n  bankAccountForm = new FormGroup({\n    authorization_contribution: new FormControl(false, Validators.required),\n    authorization_other: new FormControl(false, Validators.required),\n    debtor_name: new FormControl('', Validators.required),\n    iban: new FormControl('', Validators.required),\n    bic: new FormControl('')\n  });\n\n  sepa = false;\n\n  submitted = false;\n  sepaSubmitted = false;\n  studentSubmitted = false;\n  teacherSubmitted = false;\n\n  constructor(private memberService: MemberService,\n              private roleService: RoleService,\n              private studyProgramService: StudyProgramService,\n              private columnService: ColumnService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private notifierService: NotifierService,\n              private modalService: NgbModal,\n              private defaultBatchService: DefaultBatchService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({mode}) => {\n      this.mode = mode;\n      if (this.isEditRoute()) {\n        this.route.paramMap.subscribe(params => {\n          this.memberService.getMember(params.get('id'))\n            .subscribe(member => {\n              this.member = member;\n              this.memberForm.patchValue(member);\n              this.memberForm.patchValue({\n                flexible_column_values: member.flexible_columns\n              })\n              this.memberForm.patchValue({\n                role_id: member.role.id\n              });\n              if (member.bank_account) {\n                this.sepa = true;\n                this.bankAccountForm.patchValue(member.bank_account);\n              }\n              if (member.memberable_type === 'student') {\n                this.studentForm.patchValue(member.memberable);\n                this.studentForm.patchValue({\n                  track: member.memberable.batch_bhp ? 'bachelor' : 'master',\n                  track_number: member.memberable.batch_bhp || member.memberable.batch_mhp,\n                  study_program_id: member.memberable.study_program.id\n                });\n              } else {\n                this.teacherForm.patchValue(member.memberable);\n              }\n            });\n        });\n      } else {\n        this.studentForm.patchValue( {\n          track_number: this.defaultBatchService.getValue()\n        });\n        this.columnService.getColumns('members').subscribe(columns => this.memberForm.patchValue({flexible_column_values: columns}));\n      }\n    });\n    this.roleService.roles.subscribe(roles => {\n      this.roles = roles;\n      if (!this.memberForm.value.role_id) {\n        this.memberForm.patchValue({role_id: roles.find(r => r.name === 'general_member').id})\n      }\n    });\n    this.studyProgramService.studyPrograms.subscribe(studyPrograms => this.studyPrograms = studyPrograms);\n  }\n\n  get f() { return this.memberForm.controls; }\n\n  get bf() { return this.bankAccountForm.controls; }\n\n  get sf() { return this.studentForm.controls; }\n\n  get tf() { return this.teacherForm.controls; }\n\n  get memberType() {\n    return this.memberForm.value.memberable_type\n  }\n\n  onSave(addAnother = false) {\n    this.submitted = true;\n\n    this.sepaSubmitted = this.sepa;\n    this.studentSubmitted = this.memberType === 'student';\n    this.teacherSubmitted = this.memberType === 'teacher';\n\n    if (this.memberForm.invalid ||\n       (this.sepa && this.bankAccountForm.invalid) ||\n       (this.memberType === 'student' && this.studentForm.invalid) ||\n       (this.memberType === 'teacher' && this.teacherForm.invalid)) {\n      return;\n    }\n\n    const member = cloneDeep(this.memberForm.value);\n\n    member.bank_account = this.sepa ? this.bankAccountForm.value : null;\n\n    if (member.memberable_type === 'student') {\n      const memberable = cloneDeep(this.studentForm.value);\n      if (memberable.track === 'bachelor') {\n        memberable.batch_bhp = memberable.track_number;\n      } else {\n        memberable.batch_mhp = memberable.track_number;\n      }\n\n      delete memberable.track;\n      delete memberable.track_number;\n\n      member.memberable = memberable;\n    } else if (member.memberable_type === 'teacher') {\n      member.memberable = this.teacherForm.value;\n    } else {\n      // Should never occur\n      console.error(\"Unknown type: \" + member.memberable_type);\n    }\n\n    for (const key in member) {\n      if (member.hasOwnProperty(key) && member[key] === '') {\n        member[key] = null; // Ensures that no empty values are sent to the backend, but null values\n      }\n    }\n\n    if (this.isAddRoute()) {\n      this.defaultBatchService.setValue(+this.studentForm.value.track_number);\n      this.memberService.createMember(member)\n        .subscribe(({id}) => {\n          const modalRef = this.modalService.open(AddMemberModalComponent);\n          modalRef.componentInstance.id = id;\n          modalRef.result.then(() => {\n            if (addAnother) {\n              // TODO: change?\n              window.location.reload();\n            } else {\n              this.router.navigate(['/admin/members']);\n            }\n          });\n        }, error => {\n          // TODO: better way of checking error?\n          if (error.status === 400) {\n            this.f.email.setErrors({'alreadyInUse': true});\n            this.notifierService.notify('error', 'The email address is already registered.')\n          } else {\n            this.notifierService.notify('error', 'Could not register member. Please try again later.');\n          }\n        });\n    } else {\n      this.memberService.updateMember(member, this.member.id)\n        .subscribe(() => {\n          this.router.navigate(['/admin/members']).then(() => {\n            this.notifierService.notify('default', 'The member has been updated.');\n          });\n        }, error => {\n          // TODO: better way of checking error?\n          if (error.status === 400) {\n            this.f.email.setErrors({'alreadyInUse': true});\n            this.notifierService.notify('error', 'The email address is already registered.')\n          } else {\n            this.notifierService.notify('error', 'Could not update member. Please try again later.');\n          }\n        });\n    }\n  }\n\n  deleteMember() {\n    this.memberService.deleteMember(this.member.id)\n      .subscribe(() => {\n        this.router.navigate(['/admin/members']).then(() => {\n          this.notifierService.notify('default', 'The member has been deleted.');\n        });\n      });\n  }\n\n  archiveMember() {\n    this.memberService.archiveMember(this.member.id)\n      .subscribe(() => {\n        this.router.navigate(['/admin/members']).then(() => {\n          this.notifierService.notify('default', 'The member has been deleted.');\n        });\n      });\n  }\n\n  isAddRoute() {\n    return this.mode === 'add';\n  }\n\n  isEditRoute() {\n    return this.mode === 'edit';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MembersComponent } from './members.component';\nimport {MemberFormComponent} from './member-form/member-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MembersComponent\n  },\n  {\n    path: 'add',\n    component: MemberFormComponent,\n    data: {\n      mode: 'add'\n    }\n  },\n  {\n    path: ':id/edit',\n    component: MemberFormComponent,\n    data: {\n      mode: 'edit'\n    }\n  },\n  {\n    path: 'columns',\n    loadChildren: () => import('../columns/columns.module').then(m => m.ColumnsModule),\n    data: {\n      model: 'members'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MembersRoutingModule { }\n","export default \"table {\\n  width: 100%;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ha2hpbGJhbmRpL0Rlc2t0b3AvRGVzaWduIFByb2plY3Qvb2NraGFtLWZyb250ZW5kL3NyYy9hcHAvbW9kdWxlcy9hZG1pbi9tZW1iZXJzL21lbWJlcnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvYWRtaW4vbWVtYmVycy9tZW1iZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FkbWluL21lbWJlcnMvbWVtYmVycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXg6IGF1dG87XG59XG4iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdy14OiBhdXRvO1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Member} from '../../../core/models/member';\nimport {MemberService} from '../../../core/services/member.service';\nimport {NotifierService} from 'angular-notifier';\nimport {Router} from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DeleteModalComponent } from 'src/app/shared/components/delete-modal/delete-modal.component';\nimport { ArchiveMemberModalComponent } from './archive-member-modal/archive-member-modal.component';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.scss']\n})\nexport class MembersComponent implements OnInit {\n\n  members: Member[] = [];\n\n  columnNames = [\n    {key: 'id', name: 'ID'}, {key: 'first_name', name: 'First name'}, {key: 'insertion', name: 'Insertion'},\n    {key: 'last_name', name: 'Last name'}, {key: 'initials', name: 'Initials'}, {key: 'email', name: 'Email'},\n    {key: 'role.name', name: 'Role'}\n  ];\n\n  get columns() {\n    return this.columnNames.map(c => c.key);\n  }\n\n  get headers() {\n    return this.columnNames.map(c => c.name);\n  }\n\n  constructor(private memberService: MemberService,\n              private notifierService: NotifierService,\n              private router: Router,\n              private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getMembers();\n  }\n\n  getMembers() {\n    this.memberService.getMembers()\n      .subscribe(members => {\n        this.members = members;\n      });\n  }\n\n  getMembersExport() {\n    this.memberService.getMembersExport()\n      .subscribe(response => {\n        const blob = new Blob([response.body], { type: 'text/csv' });\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = this.getFileName(response);\n        link.click();\n      });\n  }\n\n  onMembersImport(files: FileList) {\n    const file = files.item(0);\n    this.memberService.importMembers(file)\n      .subscribe(() => {\n        this.notifierService.notify('default', 'The members have been successfully imported.');\n        this.getMembers();\n      }, error => {\n        this.notifierService.notify('error', `An error occurred: ${error.error.message}`);\n      });\n  }\n\n  private getFileName(httpResponse) {\n    const contentDispositionHeader = httpResponse.headers.get('Content-Disposition');\n    const result = contentDispositionHeader.split(';')[1].trim().split('=')[1];\n    return result.replace(/\"/g, '');\n  }\n\n  editMember(row) {\n    this.router.navigate([`/admin/members/${row.id}/edit`]);\n  }\n\n  deleteMember(row) {\n    const modalRef = this.openDeleteModal();\n    modalRef.componentInstance.objRef = 'this member';\n\n    modalRef.componentInstance.delete.subscribe(() => {\n      this.memberService.deleteMember(row.id).subscribe(() => {\n        this.notifierService.notify('default', 'Member successfully deleted.');\n        this.getMembers();\n      });\n    });\n  }\n\n  archiveMember(row) {\n    const modalRef = this.openArchiveModal();\n    modalRef.componentInstance.member = row;\n\n    modalRef.componentInstance.archive.subscribe(() => {\n      this.memberService.archiveMember(row.id).subscribe(() => {\n        modalRef.close();\n        this.notifierService.notify('default', 'Member successfully archived.');\n        this.getMembers();\n      });\n    });\n  }\n\n  private openDeleteModal() {\n    return this.modalService.open(DeleteModalComponent);\n  }\n\n  private openArchiveModal() {\n    return this.modalService.open(ArchiveMemberModalComponent);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\n\nimport { MembersRoutingModule } from './members-routing.module';\nimport { MembersComponent } from './members.component';\nimport { MemberFormComponent } from './member-form/member-form.component';\nimport { AddMemberModalComponent } from './add-member-modal/add-member-modal.component';\nimport { ArchiveMemberModalComponent } from './archive-member-modal/archive-member-modal.component';\n\n@NgModule({\n  declarations: [MembersComponent, MemberFormComponent, AddMemberModalComponent, ArchiveMemberModalComponent],\n  imports: [\n    MembersRoutingModule,\n    SharedModule\n  ],\n  entryComponents: [\n    AddMemberModalComponent,\n    ArchiveMemberModalComponent\n  ]\n})\nexport class MembersModule { }\n"],"sourceRoot":"webpack:///","file":"members-members-module-es5.js"}