{"version":3,"sources":["./src/app/modules/admin/columns/columns.component.html","./src/app/modules/admin/columns/components/column-form/column-form.component.html","./src/app/modules/admin/columns/pages/add-column/add-column.component.html","./src/app/modules/admin/columns/pages/edit-column/edit-column.component.html","./src/app/core/services/column-type.service.ts","./src/app/modules/admin/columns/columns-routing.module.ts","./src/app/modules/admin/columns/columns.component.scss","./src/app/modules/admin/columns/columns.component.ts","./src/app/modules/admin/columns/columns.module.ts","./src/app/modules/admin/columns/components/column-form/column-form.component.scss","./src/app/modules/admin/columns/components/column-form/column-form.component.ts","./src/app/modules/admin/columns/pages/add-column/add-column.component.scss","./src/app/modules/admin/columns/pages/add-column/add-column.component.ts","./src/app/modules/admin/columns/pages/edit-column/edit-column.component.scss","./src/app/modules/admin/columns/pages/edit-column/edit-column.component.ts"],"names":[],"mappings":"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","file":"columns-columns-module-es2015.js","sourcesContent":["export default \"<app-arrow-back [routerLink]=\\\"'/admin/' + model\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Manage {{ model }} columns</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-pagination-table \\n      [data]=\\\"columns\\\" \\n      [headers]=\\\"['Column name', 'Type']\\\" \\n      [keys]=\\\"['name', 'type.name']\\\" \\n      [showActionColumn]=\\\"true\\\"\\n      (edit)=\\\"onEdit($event)\\\"\\n      (delete)=\\\"onDelete($event)\\\">\\n    </app-pagination-table>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"add\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        add\\n      </i>\\n      Add column\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<form [formGroup]=\\\"columnForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Column name*</label>\\n        <input id=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.name.errors.required\\\">Column name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"column-type\\\">Type*</label>\\n        <select id=\\\"column-type\\\" class=\\\"form-control\\\" formControlName=\\\"type_id\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && f.type_id.errors }\\\">\\n          <option *ngFor=\\\"let type of columnTypes\\\" [value]=\\\"type.id\\\">\\n            {{ type.name }}\\n          </option>\\n        </select>\\n        <div *ngIf=\\\"submitted && f.type_id.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.type_id.errors.required\\\">Type is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-auto\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n    </div>\\n    <div class=\\\"col-auto ml-auto\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n    </div>\\n  </div>\\n</form>\"","export default \"<app-arrow-back (click)=\\\"goBack()\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Add column to {{ model }}</h1>\\n  </div>\\n</div>\\n<app-column-form (save)=\\\"onSave($event)\\\" (cancel)=\\\"onCancel()\\\"></app-column-form>\"","export default \"<app-arrow-back (click)=\\\"goBack()\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Edit {{ model }} column</h1>\\n  </div>\\n</div>\\n<app-column-form *ngIf=\\\"column\\\" [column]=\\\"column\\\" (save)=\\\"onSave($event)\\\" (cancel)=\\\"onCancel()\\\"></app-column-form>\\n\"","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ColumnType } from '../models/column-type';\nimport { HttpClient } from '@angular/common/http';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumnTypeService {\n\n  private baseUrl = '/api/v1/column-types';\n\n  private cache$: Observable<ColumnType[]>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get columnTypes() {\n    if (!this.cache$) {\n      this.cache$ = this.fetchColumnTypes().pipe(shareReplay(1));\n    }\n    return this.cache$;\n  }\n\n  private fetchColumnTypes() {\n    return this.httpClient.get<ColumnType[]>(this.baseUrl);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ColumnsComponent } from './columns.component';\nimport { AddColumnComponent } from './pages/add-column/add-column.component';\nimport { EditColumnComponent } from './pages/edit-column/edit-column.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: ColumnsComponent \n  },\n  {\n    path: 'add',\n    component: AddColumnComponent\n  },\n  {\n    path: ':id/edit',\n    component: EditColumnComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ColumnsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9jb2x1bW5zLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Column } from 'src/app/core/models/column';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NotifierService } from 'angular-notifier';\nimport { DeleteModalComponent } from 'src/app/shared/components/delete-modal/delete-modal.component';\n\n@Component({\n  selector: 'app-columns',\n  templateUrl: './columns.component.html',\n  styleUrls: ['./columns.component.scss']\n})\nexport class ColumnsComponent implements OnInit {\n\n  model: string;\n\n  columns: Column[] = [];\n\n  constructor(private columnService: ColumnService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private modalService: NgbModal,\n              private notifierService: NotifierService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({ model }) => {\n      this.model = model;\n      this.getColumns();\n    });\n  }\n\n  getColumns() {\n    this.columnService.getColumns(this.model)\n    .subscribe(columns => this.columns = columns);\n  }\n\n  onEdit(row) {\n    this.router.navigate([`${row.id}/edit`], { relativeTo: this.route });\n  }\n\n  onDelete(row) {\n    const modalRef = this.openDeleteModal();\n    modalRef.componentInstance.objRef = `${this.model} column`;\n\n    modalRef.componentInstance.delete.subscribe(() => {\n      this.columnService.deleteColumn(this.model, row.id).subscribe(() => {\n        this.notifierService.notify('default', 'Column successfully deleted.');\n        this.getColumns();\n      });\n    });\n  }\n\n  openDeleteModal() {\n    return this.modalService.open(DeleteModalComponent);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnsRoutingModule } from './columns-routing.module';\nimport { ColumnsComponent } from './columns.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ColumnFormComponent } from './components/column-form/column-form.component';\nimport { AddColumnComponent } from './pages/add-column/add-column.component';\nimport { EditColumnComponent } from './pages/edit-column/edit-column.component';\n\n\n@NgModule({\n  declarations: [ColumnsComponent, ColumnFormComponent, AddColumnComponent, EditColumnComponent],\n  imports: [\n    SharedModule,\n    ColumnsRoutingModule\n  ]\n})\nexport class ColumnsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9jb21wb25lbnRzL2NvbHVtbi1mb3JtL2NvbHVtbi1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Column } from 'src/app/core/models/column';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { cloneDeep } from 'lodash';\nimport { ColumnTypeService } from 'src/app/core/services/column-type.service';\nimport { ColumnType } from 'src/app/core/models/column-type';\n\n@Component({\n  selector: 'app-column-form',\n  templateUrl: './column-form.component.html',\n  styleUrls: ['./column-form.component.scss']\n})\nexport class ColumnFormComponent implements OnInit {\n\n  @Input() column: Column\n  @Output() save: EventEmitter<Column> = new EventEmitter();\n  @Output() cancel: EventEmitter<void> = new EventEmitter();\n\n  columnTypes: ColumnType[] = [];\n\n  columnForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    type_id: new FormControl('', Validators.required)\n  });\n\n  submitted = false;\n\n  constructor(private columnTypeService: ColumnTypeService) { }\n\n  ngOnInit() {\n    if (this.column) {\n      this.columnForm.patchValue({\n        name: this.column.name,\n        type_id: this.column.type.id\n      });\n    }\n    this.columnTypeService.columnTypes.subscribe(columnTypes => this.columnTypes = columnTypes);\n  }\n\n  get f() { return this.columnForm.controls; }\n\n  onSave() {\n    this.submitted = true;\n\n    if (this.columnForm.invalid) {\n      return;\n    }\n\n    const column = cloneDeep(this.columnForm.value) as Column;\n    this.save.emit(column);\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9wYWdlcy9hZGQtY29sdW1uL2FkZC1jb2x1bW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Column } from 'src/app/core/models/column';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-add-column',\n  templateUrl: './add-column.component.html',\n  styleUrls: ['./add-column.component.scss']\n})\nexport class AddColumnComponent implements OnInit {\n\n  model: string;\n\n  constructor(private columnService: ColumnService, \n              private route: ActivatedRoute, \n              private router: Router,\n              private notifierService: NotifierService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({ model }) => {\n      this.model = model;\n    });\n  }\n\n  onSave(column: Column) {\n    this.columnService.createColumn(this.model, column).subscribe(() => {\n      this.goBack().then(() => {\n        this.notifierService.notify('default', 'Column successfully created.');\n      });\n    });\n  }\n\n  onCancel() {\n    this.goBack();\n  }\n\n  goBack() {\n    return this.router.navigate(['../'], { relativeTo: this.route });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9wYWdlcy9lZGl0LWNvbHVtbi9lZGl0LWNvbHVtbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Column } from 'src/app/core/models/column';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-edit-column',\n  templateUrl: './edit-column.component.html',\n  styleUrls: ['./edit-column.component.scss']\n})\nexport class EditColumnComponent implements OnInit {\n\n  model: string;\n  column: Column;\n\n  constructor(private columnService: ColumnService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private notifierService: NotifierService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({ model }) => {\n      this.model = model;\n\n      this.route.paramMap.subscribe(params => {\n        this.columnService.getColumn(model, params.get('id')).subscribe(column => {\n          this.column = column;\n        });\n      });\n    });\n  }\n\n  onSave(column: Column) {\n    this.columnService.updateColumn(this.model, column, this.column.id).subscribe(() => {\n      this.goBack().then(() => {\n        this.notifierService.notify('default', 'Column successfully updated.');\n      });\n    });\n  }\n\n  onCancel() {\n    this.goBack();\n  }\n\n  goBack() {\n    return this.router.navigate(['../../'], { relativeTo: this.route });\n  }\n}\n"],"sourceRoot":"webpack:///"}