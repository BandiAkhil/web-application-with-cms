{"version":3,"sources":["src/app/modules/admin/columns/columns.component.html","src/app/modules/admin/columns/components/column-form/column-form.component.html","src/app/modules/admin/columns/pages/add-column/add-column.component.html","src/app/modules/admin/columns/pages/edit-column/edit-column.component.html","src/app/core/services/column-type.service.ts","src/app/modules/admin/columns/columns-routing.module.ts","src/app/modules/admin/columns/columns.component.scss","src/app/modules/admin/columns/columns.component.ts","src/app/modules/admin/columns/columns.module.ts","src/app/modules/admin/columns/components/column-form/column-form.component.scss","src/app/modules/admin/columns/components/column-form/column-form.component.ts","src/app/modules/admin/columns/pages/add-column/add-column.component.scss","src/app/modules/admin/columns/pages/add-column/add-column.component.ts","src/app/modules/admin/columns/pages/edit-column/edit-column.component.scss","src/app/modules/admin/columns/pages/edit-column/edit-column.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6vBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6+CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wPAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6RAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,iBAAiB,GAA9B,MAAa,iBAAb,CAA8B;AAM5B,MAAA,WAAA,CAAoB,UAApB,EAA0C;AAAtB,aAAA,UAAA,GAAA,UAAA;AAJZ,aAAA,OAAA,GAAU,sBAAV;AAIuC;;AAE/C,UAAI,WAAJ,GAAe;AACb,YAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,eAAK,MAAL,GAAc,KAAK,gBAAL,GAAwB,IAAxB,CAA6B,MAAA,CAAA,2CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,CAAZ,CAA7B,CAAd;AACD;;AACD,eAAO,KAAK,MAAZ;AACD;;AAEO,MAAA,gBAAgB,GAAA;AACtB,eAAO,KAAK,UAAL,CAAgB,GAAhB,CAAkC,KAAK,OAAvC,CAAP;AACD;;AAjB2B,KAA9B;;;YAMkC,iDAAA,CAAA,YAAA;;;AANrB,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH7B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG6B,E,uEAMI,iDAAA,CAAA,YAAA,C,EANJ,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,UAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,+CAAA,CAAA,kBAAA;AAFb,KADqB,EAKrB;AACE,MAAA,IAAI,EAAE,KADR;AAEE,MAAA,SAAS,EAAE,mEAAA,CAAA,oBAAA;AAFb,KALqB,EASrB;AACE,MAAA,IAAI,EAAE,UADR;AAEE,MAAA,SAAS,EAAE,qEAAA,CAAA,qBAAA;AAFb,KATqB,CAAvB;AAmBA,QAAa,oBAAoB,GAAjC,MAAa,oBAAb,CAAiC,EAAjC;AAAa,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;AC1Bb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,gBAAgB,GAA7B,MAAa,gBAAb,CAA6B;AAM3B,MAAA,WAAA,CAAoB,aAApB,EACoB,KADpB,EAEoB,MAFpB,EAGoB,YAHpB,EAIoB,eAJpB,EAIoD;AAJhC,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,eAAA,GAAA,eAAA;AANpB,aAAA,OAAA,GAAoB,EAApB;AAMyD;;AAEzD,MAAA,QAAQ,GAAA;AACN,aAAK,KAAL,CAAW,IAAX,CAAgB,SAAhB,CAA0B,CAAC;AAAE,UAAA;AAAF,SAAD,KAAc;AACtC,eAAK,KAAL,GAAa,KAAb;AACA,eAAK,UAAL;AACD,SAHD;AAID;;AAED,MAAA,UAAU,GAAA;AACR,aAAK,aAAL,CAAmB,UAAnB,CAA8B,KAAK,KAAnC,EACC,SADD,CACW,OAAO,IAAI,KAAK,OAAL,GAAe,OADrC;AAED;;AAED,MAAA,MAAM,CAAC,GAAD,EAAI;AACR,aAAK,MAAL,CAAY,QAAZ,CAAqB,WAAI,GAAG,CAAC,EAAR,WAArB,EAAyC;AAAE,UAAA,UAAU,EAAE,KAAK;AAAnB,SAAzC;AACD;;AAED,MAAA,QAAQ,CAAC,GAAD,EAAI;AACV,cAAM,QAAQ,GAAG,KAAK,eAAL,EAAjB;AACA,QAAA,QAAQ,CAAC,iBAAT,CAA2B,MAA3B,aAAuC,KAAK,KAA5C;AAEA,QAAA,QAAQ,CAAC,iBAAT,CAA2B,MAA3B,CAAkC,SAAlC,CAA4C,MAAK;AAC/C,eAAK,aAAL,CAAmB,YAAnB,CAAgC,KAAK,KAArC,EAA4C,GAAG,CAAC,EAAhD,EAAoD,SAApD,CAA8D,MAAK;AACjE,iBAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,EAAuC,8BAAvC;AACA,iBAAK,UAAL;AACD,WAHD;AAID,SALD;AAMD;;AAED,MAAA,eAAe,GAAA;AACb,eAAO,KAAK,YAAL,CAAkB,IAAlB,CAAuB,0FAAA,CAAA,sBAAA,CAAvB,CAAP;AACD;;AA1C0B,KAA7B;;;YAMqC,iEAAA,CAAA,eAAA;;YACR,4CAAA,CAAA,gBAAA;;YACC,4CAAA,CAAA,QAAA;;YACM,uDAAA,CAAA,UAAA;;YACG,6CAAA,CAAA,iBAAA;;;AAV1B,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,E,uEAMQ,iEAAA,CAAA,eAAA,C,EACR,4CAAA,CAAA,gBAAA,C,EACC,4CAAA,CAAA,QAAA,C,EACM,uDAAA,CAAA,UAAA,C,EACG,6CAAA,CAAA,iBAAA,C,EAVV,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAa,aAAa,GAA1B,MAAa,aAAb,CAA0B,EAA1B;AAAa,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAPzB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,+CAAA,CAAA,kBAAA,CAAD,EAAmB,0EAAA,CAAA,qBAAA,CAAnB,EAAwC,mEAAA,CAAA,oBAAA,CAAxC,EAA4D,qEAAA,CAAA,qBAAA,CAA5D,CADN;AAER,MAAA,OAAO,EAAE,CACP,yDAAA,CAAA,cAAA,CADO,EAEP,oDAAA,CAAA,sBAAA,CAFO;AAFD,KAAT,CAOyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;ACjBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,mBAAmB,GAAhC,MAAa,mBAAb,CAAgC;AAe9B,MAAA,WAAA,CAAoB,iBAApB,EAAwD;AAApC,aAAA,iBAAA,GAAA,iBAAA;AAZV,aAAA,IAAA,GAA6B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA7B;AACA,aAAA,MAAA,GAA6B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA7B;AAEV,aAAA,WAAA,GAA4B,EAA5B;AAEA,aAAA,UAAA,GAAa,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACzB,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA/B,CADmB;AAEzB,UAAA,OAAO,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA/B;AAFgB,SAAd,CAAb;AAKA,aAAA,SAAA,GAAY,KAAZ;AAE6D;;AAE7D,MAAA,QAAQ,GAAA;AACN,YAAI,KAAK,MAAT,EAAiB;AACf,eAAK,UAAL,CAAgB,UAAhB,CAA2B;AACzB,YAAA,IAAI,EAAE,KAAK,MAAL,CAAY,IADO;AAEzB,YAAA,OAAO,EAAE,KAAK,MAAL,CAAY,IAAZ,CAAiB;AAFD,WAA3B;AAID;;AACD,aAAK,iBAAL,CAAuB,WAAvB,CAAmC,SAAnC,CAA6C,WAAW,IAAI,KAAK,WAAL,GAAmB,WAA/E;AACD;;AAED,UAAI,CAAJ,GAAK;AAAK,eAAO,KAAK,UAAL,CAAgB,QAAvB;AAAkC;;AAE5C,MAAA,MAAM,GAAA;AACJ,aAAK,SAAL,GAAiB,IAAjB;;AAEA,YAAI,KAAK,UAAL,CAAgB,OAApB,EAA6B;AAC3B;AACD;;AAED,cAAM,MAAM,GAAG,MAAA,CAAA,mCAAA,CAAA,WAAA,CAAA,CAAA,CAAU,KAAK,UAAL,CAAgB,KAA1B,CAAf;AACA,aAAK,IAAL,CAAU,IAAV,CAAe,MAAf;AACD;;AAED,MAAA,QAAQ,GAAA;AACN,aAAK,MAAL,CAAY,IAAZ;AACD;;AA1C6B,KAAhC;;;YAeyC,sEAAA,CAAA,mBAAA;;;AAb9B,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,E,uEAAA,CAAA,E,6BAAA,E,QAAA,E,KAAc,CAAd;AACC,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,E,gEAAM,0CAAA,CAAA,cAAA,C,CAAN,CAAA,E,6BAAA,E,MAAA,E,KAAgD,CAAhD;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,E,gEAAQ,0CAAA,CAAA,cAAA,C,CAAR,CAAA,E,6BAAA,E,QAAA,E,KAAgD,CAAhD;AAJC,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,+HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK+B,E,uEAeS,sEAAA,CAAA,mBAAA,C,EAfT,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,kBAAkB,GAA/B,MAAa,kBAAb,CAA+B;AAI7B,MAAA,WAAA,CAAoB,aAApB,EACoB,KADpB,EAEoB,MAFpB,EAGoB,eAHpB,EAGoD;AAHhC,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,eAAA,GAAA,eAAA;AAAqC;;AAEzD,MAAA,QAAQ,GAAA;AACN,aAAK,KAAL,CAAW,IAAX,CAAgB,SAAhB,CAA0B,CAAC;AAAE,UAAA;AAAF,SAAD,KAAc;AACtC,eAAK,KAAL,GAAa,KAAb;AACD,SAFD;AAGD;;AAED,MAAA,MAAM,CAAC,MAAD,EAAe;AACnB,aAAK,aAAL,CAAmB,YAAnB,CAAgC,KAAK,KAArC,EAA4C,MAA5C,EAAoD,SAApD,CAA8D,MAAK;AACjE,eAAK,MAAL,GAAc,IAAd,CAAmB,MAAK;AACtB,iBAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,EAAuC,8BAAvC;AACD,WAFD;AAGD,SAJD;AAKD;;AAED,MAAA,QAAQ,GAAA;AACN,aAAK,MAAL;AACD;;AAED,MAAA,MAAM,GAAA;AACJ,eAAO,KAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAAE,UAAA,UAAU,EAAE,KAAK;AAAnB,SAA9B,CAAP;AACD;;AA7B4B,KAA/B;;;YAIqC,iEAAA,CAAA,eAAA;;YACR,4CAAA,CAAA,gBAAA;;YACC,4CAAA,CAAA,QAAA;;YACS,6CAAA,CAAA,iBAAA;;;AAP1B,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,E,uEAIM,iEAAA,CAAA,eAAA,C,EACR,4CAAA,CAAA,gBAAA,C,EACC,4CAAA,CAAA,QAAA,C,EACS,6CAAA,CAAA,iBAAA,C,EAPR,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,mBAAmB,GAAhC,MAAa,mBAAb,CAAgC;AAK9B,MAAA,WAAA,CAAoB,aAApB,EACoB,KADpB,EAEoB,MAFpB,EAGoB,eAHpB,EAGoD;AAHhC,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,eAAA,GAAA,eAAA;AAAqC;;AAEzD,MAAA,QAAQ,GAAA;AACN,aAAK,KAAL,CAAW,IAAX,CAAgB,SAAhB,CAA0B,CAAC;AAAE,UAAA;AAAF,SAAD,KAAc;AACtC,eAAK,KAAL,GAAa,KAAb;AAEA,eAAK,KAAL,CAAW,QAAX,CAAoB,SAApB,CAA8B,MAAM,IAAG;AACrC,iBAAK,aAAL,CAAmB,SAAnB,CAA6B,KAA7B,EAAoC,MAAM,CAAC,GAAP,CAAW,IAAX,CAApC,EAAsD,SAAtD,CAAgE,MAAM,IAAG;AACvE,mBAAK,MAAL,GAAc,MAAd;AACD,aAFD;AAGD,WAJD;AAKD,SARD;AASD;;AAED,MAAA,MAAM,CAAC,MAAD,EAAe;AACnB,aAAK,aAAL,CAAmB,YAAnB,CAAgC,KAAK,KAArC,EAA4C,MAA5C,EAAoD,KAAK,MAAL,CAAY,EAAhE,EAAoE,SAApE,CAA8E,MAAK;AACjF,eAAK,MAAL,GAAc,IAAd,CAAmB,MAAK;AACtB,iBAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,EAAuC,8BAAvC;AACD,WAFD;AAGD,SAJD;AAKD;;AAED,MAAA,QAAQ,GAAA;AACN,aAAK,MAAL;AACD;;AAED,MAAA,MAAM,GAAA;AACJ,eAAO,KAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAAE,UAAA,UAAU,EAAE,KAAK;AAAnB,SAAjC,CAAP;AACD;;AApC6B,KAAhC;;;YAKqC,iEAAA,CAAA,eAAA;;YACR,4CAAA,CAAA,gBAAA;;YACC,4CAAA,CAAA,QAAA;;YACS,6CAAA,CAAA,iBAAA;;;AAR1B,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK+B,E,uEAKK,iEAAA,CAAA,eAAA,C,EACR,4CAAA,CAAA,gBAAA,C,EACC,4CAAA,CAAA,QAAA,C,EACS,6CAAA,CAAA,iBAAA,C,EARP,CAAA,EAAnB,mBAAmB,CAAnB","sourcesContent":["export default \"<app-arrow-back [routerLink]=\\\"'/admin/' + model\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Manage {{ model }} columns</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-pagination-table \\n      [data]=\\\"columns\\\" \\n      [headers]=\\\"['Column name', 'Type']\\\" \\n      [keys]=\\\"['name', 'type.name']\\\" \\n      [showActionColumn]=\\\"true\\\"\\n      (edit)=\\\"onEdit($event)\\\"\\n      (delete)=\\\"onDelete($event)\\\">\\n    </app-pagination-table>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"add\\\">\\n      <i class=\\\"material-icons btn-icon\\\">\\n        add\\n      </i>\\n      Add column\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<form [formGroup]=\\\"columnForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Column name*</label>\\n        <input id=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.name.errors.required\\\">Column name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"column-type\\\">Type*</label>\\n        <select id=\\\"column-type\\\" class=\\\"form-control\\\" formControlName=\\\"type_id\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && f.type_id.errors }\\\">\\n          <option *ngFor=\\\"let type of columnTypes\\\" [value]=\\\"type.id\\\">\\n            {{ type.name }}\\n          </option>\\n        </select>\\n        <div *ngIf=\\\"submitted && f.type_id.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.type_id.errors.required\\\">Type is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-auto\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n    </div>\\n    <div class=\\\"col-auto ml-auto\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n    </div>\\n  </div>\\n</form>\"","export default \"<app-arrow-back (click)=\\\"goBack()\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Add column to {{ model }}</h1>\\n  </div>\\n</div>\\n<app-column-form (save)=\\\"onSave($event)\\\" (cancel)=\\\"onCancel()\\\"></app-column-form>\"","export default \"<app-arrow-back (click)=\\\"goBack()\\\"></app-arrow-back>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Edit {{ model }} column</h1>\\n  </div>\\n</div>\\n<app-column-form *ngIf=\\\"column\\\" [column]=\\\"column\\\" (save)=\\\"onSave($event)\\\" (cancel)=\\\"onCancel()\\\"></app-column-form>\\n\"","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ColumnType } from '../models/column-type';\nimport { HttpClient } from '@angular/common/http';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumnTypeService {\n\n  private baseUrl = '/api/v1/column-types';\n\n  private cache$: Observable<ColumnType[]>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get columnTypes() {\n    if (!this.cache$) {\n      this.cache$ = this.fetchColumnTypes().pipe(shareReplay(1));\n    }\n    return this.cache$;\n  }\n\n  private fetchColumnTypes() {\n    return this.httpClient.get<ColumnType[]>(this.baseUrl);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ColumnsComponent } from './columns.component';\nimport { AddColumnComponent } from './pages/add-column/add-column.component';\nimport { EditColumnComponent } from './pages/edit-column/edit-column.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: ColumnsComponent \n  },\n  {\n    path: 'add',\n    component: AddColumnComponent\n  },\n  {\n    path: ':id/edit',\n    component: EditColumnComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ColumnsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9jb2x1bW5zLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Column } from 'src/app/core/models/column';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NotifierService } from 'angular-notifier';\nimport { DeleteModalComponent } from 'src/app/shared/components/delete-modal/delete-modal.component';\n\n@Component({\n  selector: 'app-columns',\n  templateUrl: './columns.component.html',\n  styleUrls: ['./columns.component.scss']\n})\nexport class ColumnsComponent implements OnInit {\n\n  model: string;\n\n  columns: Column[] = [];\n\n  constructor(private columnService: ColumnService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private modalService: NgbModal,\n              private notifierService: NotifierService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({ model }) => {\n      this.model = model;\n      this.getColumns();\n    });\n  }\n\n  getColumns() {\n    this.columnService.getColumns(this.model)\n    .subscribe(columns => this.columns = columns);\n  }\n\n  onEdit(row) {\n    this.router.navigate([`${row.id}/edit`], { relativeTo: this.route });\n  }\n\n  onDelete(row) {\n    const modalRef = this.openDeleteModal();\n    modalRef.componentInstance.objRef = `${this.model} column`;\n\n    modalRef.componentInstance.delete.subscribe(() => {\n      this.columnService.deleteColumn(this.model, row.id).subscribe(() => {\n        this.notifierService.notify('default', 'Column successfully deleted.');\n        this.getColumns();\n      });\n    });\n  }\n\n  openDeleteModal() {\n    return this.modalService.open(DeleteModalComponent);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColumnsRoutingModule } from './columns-routing.module';\nimport { ColumnsComponent } from './columns.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ColumnFormComponent } from './components/column-form/column-form.component';\nimport { AddColumnComponent } from './pages/add-column/add-column.component';\nimport { EditColumnComponent } from './pages/edit-column/edit-column.component';\n\n\n@NgModule({\n  declarations: [ColumnsComponent, ColumnFormComponent, AddColumnComponent, EditColumnComponent],\n  imports: [\n    SharedModule,\n    ColumnsRoutingModule\n  ]\n})\nexport class ColumnsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9jb21wb25lbnRzL2NvbHVtbi1mb3JtL2NvbHVtbi1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Column } from 'src/app/core/models/column';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { cloneDeep } from 'lodash';\nimport { ColumnTypeService } from 'src/app/core/services/column-type.service';\nimport { ColumnType } from 'src/app/core/models/column-type';\n\n@Component({\n  selector: 'app-column-form',\n  templateUrl: './column-form.component.html',\n  styleUrls: ['./column-form.component.scss']\n})\nexport class ColumnFormComponent implements OnInit {\n\n  @Input() column: Column\n  @Output() save: EventEmitter<Column> = new EventEmitter();\n  @Output() cancel: EventEmitter<void> = new EventEmitter();\n\n  columnTypes: ColumnType[] = [];\n\n  columnForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    type_id: new FormControl('', Validators.required)\n  });\n\n  submitted = false;\n\n  constructor(private columnTypeService: ColumnTypeService) { }\n\n  ngOnInit() {\n    if (this.column) {\n      this.columnForm.patchValue({\n        name: this.column.name,\n        type_id: this.column.type.id\n      });\n    }\n    this.columnTypeService.columnTypes.subscribe(columnTypes => this.columnTypes = columnTypes);\n  }\n\n  get f() { return this.columnForm.controls; }\n\n  onSave() {\n    this.submitted = true;\n\n    if (this.columnForm.invalid) {\n      return;\n    }\n\n    const column = cloneDeep(this.columnForm.value) as Column;\n    this.save.emit(column);\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9wYWdlcy9hZGQtY29sdW1uL2FkZC1jb2x1bW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Column } from 'src/app/core/models/column';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-add-column',\n  templateUrl: './add-column.component.html',\n  styleUrls: ['./add-column.component.scss']\n})\nexport class AddColumnComponent implements OnInit {\n\n  model: string;\n\n  constructor(private columnService: ColumnService, \n              private route: ActivatedRoute, \n              private router: Router,\n              private notifierService: NotifierService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({ model }) => {\n      this.model = model;\n    });\n  }\n\n  onSave(column: Column) {\n    this.columnService.createColumn(this.model, column).subscribe(() => {\n      this.goBack().then(() => {\n        this.notifierService.notify('default', 'Column successfully created.');\n      });\n    });\n  }\n\n  onCancel() {\n    this.goBack();\n  }\n\n  goBack() {\n    return this.router.navigate(['../'], { relativeTo: this.route });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWRtaW4vY29sdW1ucy9wYWdlcy9lZGl0LWNvbHVtbi9lZGl0LWNvbHVtbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Column } from 'src/app/core/models/column';\nimport { ColumnService } from 'src/app/core/services/column.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'app-edit-column',\n  templateUrl: './edit-column.component.html',\n  styleUrls: ['./edit-column.component.scss']\n})\nexport class EditColumnComponent implements OnInit {\n\n  model: string;\n  column: Column;\n\n  constructor(private columnService: ColumnService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private notifierService: NotifierService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(({ model }) => {\n      this.model = model;\n\n      this.route.paramMap.subscribe(params => {\n        this.columnService.getColumn(model, params.get('id')).subscribe(column => {\n          this.column = column;\n        });\n      });\n    });\n  }\n\n  onSave(column: Column) {\n    this.columnService.updateColumn(this.model, column, this.column.id).subscribe(() => {\n      this.goBack().then(() => {\n        this.notifierService.notify('default', 'Column successfully updated.');\n      });\n    });\n  }\n\n  onCancel() {\n    this.goBack();\n  }\n\n  goBack() {\n    return this.router.navigate(['../../'], { relativeTo: this.route });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"columns-columns-module-es5.js"}