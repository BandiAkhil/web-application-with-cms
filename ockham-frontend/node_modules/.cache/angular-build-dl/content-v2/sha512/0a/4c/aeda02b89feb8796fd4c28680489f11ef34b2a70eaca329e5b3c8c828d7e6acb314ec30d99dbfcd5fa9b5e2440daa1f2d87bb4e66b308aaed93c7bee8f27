{"version":3,"sources":["src/app/modules/account/account-information/account-information.component.html","src/app/modules/account/account.component.html","src/app/modules/account/change-password/change-password.component.html","src/app/modules/account/mailing-lists/mailing-lists.component.html","src/app/core/services/mailing-list.service.ts","src/app/modules/account/account-information/account-information.component.scss","src/app/modules/account/account-information/account-information.component.ts","src/app/modules/account/account-routing.module.ts","src/app/modules/account/account.component.scss","src/app/modules/account/account.component.ts","src/app/modules/account/account.module.ts","src/app/modules/account/change-password/change-password.component.scss","src/app/modules/account/change-password/change-password.component.ts","src/app/modules/account/mailing-lists/mailing-lists.component.scss","src/app/modules/account/mailing-lists/mailing-lists.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h3>Information</h3>\\n<form [formGroup]=\\\"accountForm\\\">\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col-md-8 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"first-name\\\">First name</label>\\n        <input id=\\\"first-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.first_name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.first_name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.first_name.errors.required\\\">First name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"insertion\\\">Insertion</label>\\n        <input id=\\\"insertion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"insertion\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col-md-8 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"last-name\\\">Last name</label>\\n        <input id=\\\"last-name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.last_name.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.last_name.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.last_name.errors.required\\\">Last name is required</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"initials\\\">Initials</label>\\n        <input id=\\\"initials\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"initials\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.initials.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.initials.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.initials.errors.required\\\">Initials is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col-md-6 col-xs-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"f.email.errors.email\\\">Invalid email</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-xs-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"phone-number\\\">Phone number</label>\\n        <input id=\\\"phone-number\\\" type=\\\"tel\\\" class=\\\"form-control\\\" formControlName=\\\"phone_number\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col-md-8 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"address\\\">Address</label>\\n        <input id=\\\"address\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"zip-code\\\">Zip code</label>\\n        <input id=\\\"zip-code\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"zip_code\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"residence\\\">Residence</label>\\n        <input id=\\\"residence\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"residence\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"residence\\\">Country</label>\\n        <input id=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"country\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-auto\\\">\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"onUpdate()\\\">Update</button>\\n    </div>\\n    <div class=\\\"col-auto ml-auto\\\">\\n      <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/\\\">Cancel</button>\\n    </div>\\n  </div>\\n</form>\\n\"","export default \"<div class=\\\"custom-padding\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"page-title\\\">My Account</h1>\\n\\n    <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link pointer active\\\" data-toggle=\\\"tab\\\" (click)=\\\"setActive('details')\\\">Details</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link pointer\\\" data-toggle=\\\"tab\\\" (click)=\\\"setActive('mailing_lists')\\\">Mailing lists</a>\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"row pt-4\\\" *ngIf=\\\"isActive('details')\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <app-account-information></app-account-information>\\n      </div>\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <app-change-password></app-change-password>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row pt-4\\\" *ngIf=\\\"isActive('mailing_lists')\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-mailing-lists></app-mailing-lists>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<h3>Change password</h3>\\n<form [formGroup]=\\\"passwordForm\\\">\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"old-password\\\">Old password*</label>\\n        <input id=\\\"old-password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"old_password\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && f.old_password.errors }\\\">\\n        <div *ngIf=\\\"submitted && f.old_password.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.old_password.errors.required\\\">Old password is required</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"new-password\\\">New password*</label>\\n        <input id=\\\"new-password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"new_password\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && (f.new_password.errors || passwordForm.errors?.notSame) }\\\">\\n        <div *ngIf=\\\"submitted && (f.new_password.errors || passwordForm.errors?.notSame)\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.new_password.errors?.required; else newPasswordSame\\\">New password is required</div>\\n          <ng-template #newPasswordSame>\\n            <div *ngIf=\\\"passwordForm.errors?.notSame\\\">Passwords don't match</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"repeat-password\\\">Repeat password*</label>\\n        <input id=\\\"repeat-password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"repeat_new_password\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted &&  (f.repeat_new_password.errors || passwordForm.errors?.notSame) }\\\">\\n        <div *ngIf=\\\"submitted && (f.repeat_new_password.errors || passwordForm.errors?.notSame)\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.repeat_new_password.errors?.required; else repeatPasswordSame\\\">Repeat password is required</div>\\n          <ng-template #repeatPasswordSame>\\n            <div *ngIf=\\\"passwordForm.errors?.notSame\\\">Passwords don't match</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-auto\\\">\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"onChangePassword()\\\">Change password</button>\\n    </div>\\n  </div>\\n</form>\\n\"","export default \"<h3 class=\\\"pb-4\\\">Mailing lists</h3>\\n<table class=\\\"table w-100\\\"> \\n  <thead>\\n    <tr>\\n      <th>Name</th>\\n      <th>Action</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let mailingList of mailingLists\\\">\\n      <td>\\n        {{ mailingList.name }}\\n        &nbsp;<span class=\\\"badge badge-success\\\" *ngIf=\\\"mailingList.subscribed\\\">Subscribed</span>\\n      </td>\\n      <td>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"!mailingList.subscribed\\\" (click)=\\\"subscribeToMailingList(mailingList)\\\">Subscribe</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" *ngIf=\\\"mailingList.subscribed\\\" (click)=\\\"unsubscribeFromMailingList(mailingList)\\\">Unsubscribe</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Injectable } from '@angular/core';\nimport { MailingList } from '../models/mailing_list';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailingListService {\n\n  private baseUrl = 'api/v1/mailing-lists';\n\n  private cache$: Observable<MailingList[]>;\n\n  // private cache$: Observable<MailingList[]> = of([\n  //   {\n  //     id: 'c20e394ceb',\n  //     name: 'Test',\n  //     subscribed: true\n  //   },\n  //   {\n  //     id: 'c20e394ceb',\n  //     name: 'Test 2',\n  //     subscribed: false\n  //   },\n  //   {\n  //     id: 'c20e394ceb',\n  //     name: 'Test 3',\n  //     subscribed: false\n  //   },\n  //   {\n  //     id: 'c20e394ceb',\n  //     name: 'Test 4',\n  //     subscribed: true\n  //   },\n  //   {\n  //     id: 'c20e394ceb',\n  //     name: 'Test 5',\n  //     subscribed: true\n  //   }\n  // ]);\n\n  constructor(private http: HttpClient) { }\n\n  get mailingLists() {\n    if (!this.cache$) {\n      this.cache$ = this.fetchMailingLists().pipe(shareReplay(1));\n    }\n    return this.cache$;\n  }\n\n  fetchMailingLists() {\n    return this.http.get<MailingList[]>(this.baseUrl);\n  }\n\n  subscribeToMailingList(list_id: string) {\n    return this.http.post<any>(`${this.baseUrl}/${list_id}/subscribe`, null);\n  }\n\n  unsubscribeFromMailingList(list_id: string) {\n    return this.http.post<any>(`${this.baseUrl}/${list_id}/unsubscribe`, null);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNjb3VudC9hY2NvdW50LWluZm9ybWF0aW9uL2FjY291bnQtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Member} from 'src/app/core/models/member';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {NotifierService} from 'angular-notifier';\nimport {AuthenticationService} from 'src/app/core/services/authentication.service';\nimport {MemberService} from 'src/app/core/services/member.service';\nimport {cloneDeep} from 'lodash';\n\n@Component({\n  selector: 'app-account-information',\n  templateUrl: './account-information.component.html',\n  styleUrls: ['./account-information.component.scss']\n})\nexport class AccountInformationComponent implements OnInit {\n\n  user: Member;\n\n  accountForm = new FormGroup({\n    first_name: new FormControl('', Validators.required),\n    insertion: new FormControl(''),\n    last_name: new FormControl('', Validators.required),\n    initials: new FormControl('', Validators.required),\n    phone_number: new FormControl(''),\n    address: new FormControl(''),\n    zip_code: new FormControl(''),\n    residence: new FormControl(''),\n    country: new FormControl(''),\n    email: new FormControl('', [Validators.required, Validators.email])\n  });\n\n  submitted = false;\n\n  constructor(private notifierService: NotifierService,\n              private authService: AuthenticationService,\n              private memberService: MemberService) { }\n\n  ngOnInit() {\n    this.authService.getUser()\n      .subscribe(user => {\n        this.user = user;\n        this.accountForm.patchValue(user);\n      });\n  }\n\n  get f() { return this.accountForm.controls; }\n\n  onUpdate() {\n    this.submitted = true;\n\n    if (this.accountForm.invalid) {\n      return;\n    }\n\n    const user: Member = Object.assign(cloneDeep(this.user), this.accountForm.value);\n\n    this.memberService.updateMember(user, user.id)\n      .subscribe(member => {\n        this.notifierService.notify('default', 'Your account has been updated.');\n        this.authService.setUser(member);\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountComponent } from './account.component';\n\nconst routes: Routes = [{ path: '', component: AccountComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  active: string = 'details';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  isActive(tab: string) {\n    return this.active === tab;\n  }\n\n  setActive(tab: string) {\n    if (this.active === tab) return;\n    this.active = tab;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AccountComponent } from './account.component';\nimport {SharedModule} from \"../../shared/shared.module\";\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { AccountInformationComponent } from './account-information/account-information.component';\nimport { MailingListsComponent } from './mailing-lists/mailing-lists.component';\n\n\n@NgModule({\n  declarations: [AccountComponent, ChangePasswordComponent, AccountInformationComponent, MailingListsComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNjb3VudC9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { cloneDeep } from 'lodash';\nimport {AuthenticationService} from \"../../../core/services/authentication.service\";\nimport {MemberService} from \"../../../core/services/member.service\";\nimport {NotifierService} from \"angular-notifier\";\nimport { samePasswords } from 'src/app/shared/validators/same-passwords.validator';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  passwordForm = new FormGroup({\n    old_password: new FormControl('', Validators.required),\n    new_password: new FormControl('', Validators.required),\n    repeat_new_password: new FormControl('', Validators.required)\n  }, { validators: samePasswords });\n\n  submitted = false;\n\n  constructor(private authService: AuthenticationService,\n              private memberService: MemberService,\n              private notifierService: NotifierService) { }\n\n  ngOnInit() {\n  }\n\n  get f() { return this.passwordForm.controls; }\n\n  onChangePassword() {\n    this.submitted = true;\n\n    if (this.passwordForm.invalid) {\n      return;\n    }\n\n    const data = cloneDeep(this.passwordForm.value);\n    delete data.repeat_password; // Not needed\n\n    this.authService.getUser()\n      .subscribe(u => {\n        this.memberService.changePassword(u, data)\n          .subscribe(() => {\n            this.notifierService.notify('default', 'Your password has been changed.');\n          }, error =>  {\n            this.notifierService.notify('error', 'The old password is incorrect.');\n          });\n      });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNjb3VudC9tYWlsaW5nLWxpc3RzL21haWxpbmctbGlzdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { MailingList } from 'src/app/core/models/mailing_list';\nimport { MailingListService } from 'src/app/core/services/mailing-list.service';\n\n@Component({\n  selector: 'app-mailing-lists',\n  templateUrl: './mailing-lists.component.html',\n  styleUrls: ['./mailing-lists.component.scss']\n})\nexport class MailingListsComponent implements OnInit {\n\n  mailingLists: MailingList[];\n\n  constructor(private mailingListService: MailingListService, private notifierService: NotifierService) { }\n\n  ngOnInit() {\n    this.getMailingLists();\n  }\n\n  getMailingLists() {\n    this.mailingListService.mailingLists.subscribe(mailingLists => this.mailingLists = mailingLists);\n  }\n\n  subscribeToMailingList(mailingList: MailingList) {\n    this.mailingListService.subscribeToMailingList(mailingList.id)\n      .subscribe(() => {\n        this.notifierService.notify('default', `You are now subscribed to ${mailingList.name}.`);\n        this.mailingListService.fetchMailingLists().subscribe(mailingLists => this.mailingLists = mailingLists);\n      }, error => {\n        this.notifierService.notify('error', `An error occurred: ${error.error.message}`);\n      });\n  }\n\n  unsubscribeFromMailingList(mailingList: MailingList) {\n    this.mailingListService.unsubscribeFromMailingList(mailingList.id)\n      .subscribe(() => {\n        this.notifierService.notify('default', `You are now unsubscribed from ${mailingList.name}.`);\n        this.mailingListService.fetchMailingLists().subscribe(mailingLists => this.mailingLists = mailingLists);\n      }, error => {\n        this.notifierService.notify('error', `An error occurred: ${error.error.message}`);\n      });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"modules-account-account-module-es5.js"}